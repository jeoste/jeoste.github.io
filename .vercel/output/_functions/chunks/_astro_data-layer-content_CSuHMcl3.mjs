const _astro_dataLayerContent = [["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.6","content-config-digest","bea8e328692411d8","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://jeoste.github.io/\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":8888,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"layout\":\"constrained\",\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{\"light\":\"min-light\",\"dark\":\"night-owl\"},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[null,[null,{\"test\":\"Table of contents\"}]],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,70,71,98,99,154,155,213,214,259,260,403,404,523,524,642,643],"etl-vs-esb",{id:11,data:13,body:24,filePath:25,digest:26,rendered:27},{author:14,pubDatetime:15,modDatetime:16,title:17,tags:18,description:23},"Jeoffrey Stéphan",["Date","2024-02-29T01:08:52.737Z"],["Date","2025-06-05T19:18:52.737Z"],"Data Flows ETL vs ESB | 5 Key Points to Choose the Right Solution",[19,20,21,22],"data engineering","data architecture","esb","etl","Understanding the differences and making the right choice between ESB and ETL","> This article is currently available in French. Version sous ce lien --> [Flux de données ETL vs ESB : 5 points clés pour choisir la solution adéquate](https://www.data-major.com/fr/etl-esb-comment-choisir/)\r\n\r\n## ETL vs ESB: 5 Key Points to Choose the Right Solution\r\n\r\n### What is an ETL?\r\n\r\nETL, *Extract Transform Load*, is middleware that moves data from point A to point B at defined intervals. These three verbs summarize the three phases, or processes, of each data flow.\r\n\r\nA first **extraction** phase, where data can come from any source—database, FTP, Amazon S3, Dropbox, Google Drive, Linux folder, etc.  \r\nDepending on the source, data can also be extracted in any format: SQL, JSON, XML, EDI, positional, Excel, and more.\r\n\r\n![Diagram of an ETL process](https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-121858.png)\r\n\r\nA second **transformation** phase applies business rules, cleans the data, filters out irrelevant data, etc.\r\n\r\nA third **integration** phase loads the data into a target, just like extraction, in any format and source.\r\n\r\n**The advantage of ETL** is its flexibility and ability to cover the most common use cases thanks to the diversity of input/output sources and formats.  \r\n**The disadvantage of ETL** is that it can become a \"black box\" that is difficult to maintain or evolve.\r\n\r\n## What is an ESB?\r\n\r\nESB, *Enterprise Service Bus*, allows applications within the same information system—which were not designed to work together—to communicate.\r\n\r\nThis issue is resolved by creating a bus that listens for and transmits data from application A to application B, and from application B to application A.\r\n\r\n![Diagram of an ESB process](https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122021.png)\r\n\r\nMoreover, if the client's information system grows—due to an acquisition or the addition of a new tool for business teams, for example—the new application simply needs to be \"connected\" to the ESB to be integrated into the existing system.\r\n\r\n**The advantage** is avoiding a complete overhaul of the information system with each new software or application integration.  \r\n**The disadvantage** is that applications must be able to exchange information in real time, typically using SOAP or REST formats.\r\n\r\n## How to Distinguish an ETL from an ESB?\r\n\r\n### Data Retrieval\r\n\r\nThe main difference between ETL and ESB concerns how data is retrieved.\r\n\r\n![Diagram comparing ESB/ETL](https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122222-1.png)\r\n\r\n**ETL works in \"pull\" mode:** the data flow is scheduled, executed on demand, and fetches (=pulls) data from a defined source to perform the required work.\r\n\r\n**The ETL flow is active**—it goes to get the data.\r\n\r\n**ESB works in \"push\" mode:** the flow is \"event-driven\" and is triggered as soon as data is received from a source application.\r\n\r\nUpon receipt, the bus distributes (=pushes) the received information to target applications via a publisher/subscriber system.\r\n\r\n**The ESB flow is passive**—it transits the data.\r\n\r\n### Data Integration Delay\r\n\r\nThe second difference, linked to the first, is the data integration time.\r\n\r\n![Processing time](https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122543.png)\r\n\r\n**ETL works on a scheduled basis:** data is integrated when the scheduled flow completes its processing.  \r\nDepending on the trigger, the data is synchronized at the end of execution.\r\n\r\nThese triggers can be set up hourly, daily, at regular intervals, etc.\r\n\r\n**ESB, on the other hand, is event-driven.** It receives data on the bus as soon as it is created or modified in the source application.\r\n\r\nOnce received on the bus, the data is sent to targets in real time after simple transformation steps and via a publisher/subscriber system. Unlike ETL, integration is real time.\r\n\r\n### Volume\r\n\r\nThe third difference, related to the second, concerns data volume.\r\n\r\nETL is designed to handle **large volumes** at scheduled times during the day, so at **low intensity**.\r\n\r\nExample: a flow runs once a day, reads a table of ten thousand rows in a database.  \r\nIn this case, it processes ten thousand rows and then stops.\r\n\r\nConversely, ESB is designed to handle **small volumes** but in real time, so at **high intensity**.\r\n\r\nExample: the bus receives ten thousand independent data items throughout the day.  \r\nIn this case, it processes ten thousand single-row transactions throughout the day, listening after each one (the ESB flow never stops).\r\n\r\n### Complexity\r\n\r\nThe fourth difference, linked to the third, concerns complexity.\r\n\r\nDue to the volume, the ETL flow is more complex to set up because the code must be optimized to handle the load.\r\n\r\nAdd to this the \"T\" process in \"ETL,\" which involves more transformations.  \r\nAn additional optimization layer is necessary to avoid degrading the performance of the server where the flow runs.\r\n\r\nThis may involve writing data to temporary files, for example, to increase the number of \"sub-processes\" within the flow, allowing data processing to be split into smaller parts.\r\n\r\nThe ESB flow, on the other hand, only receives data pushed from the source; its main purpose is to transit the data so applications remain synchronized.\r\n\r\nThe number and complexity of transformations in an ESB flow are lower compared to ETL.\r\n\r\n### Machine Resources and Parallelization\r\n\r\nThe fifth and final difference concerns the number of processes and resources consumed simultaneously.\r\n\r\n![Processus](https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122645.png)\r\n\r\n**ETL flows** run one after another and stop when processing is complete.\r\n\r\nThis way of working requires more machine resources to launch, initialize the flow, and execute processing.\r\n\r\nCombined with volume and the number of potential flows, server load can double (or more) if all flows run at once.\r\n\r\nUnlike ESB, which is always listening, the flow is already instantiated and running, resources are ready to use, and incoming data arrives according to the load of the source applications (i.e., the application's users).\r\n\r\nThis way, several requests can be processed simultaneously without impacting machine resources as much as ETL.\r\n\r\n## How to Choose? And Do We Really Have to Choose?\r\n\r\nBefore determining whether your need is for ETL or ESB, ask yourself these five questions:\r\n\r\n- Is my **data need immediate**?\r\n\r\n  - If yes, **ESB**; if not, **ETL**\r\n  \r\n- Do I have **complex transformations**?\r\n\r\n  - If yes, **ETL**; if not, **ESB**\r\n\r\n- Is the **volume** of my data **large**?\r\n\r\n  - If yes, **ETL**; if not, **ESB**\r\n\r\n- Will I need to **add more applications** in the future?\r\n\r\n  - If yes, **ESB**; if not, **ETL**\r\n  \r\n- Do I want to **limit my budget**?\r\n\r\n  - If yes, **ETL**; if not, **ESB**\r\n\r\n\"What if I want to take advantage of both ETL **and** ESB?\"\r\n\r\nThe difference between ETL and ESB is becoming increasingly subtle; integrators are combining these two technologies to enjoy the benefits of both without the drawbacks, all within the same platform (see Talend API Cloud Services).\r\n\r\nThus, the question is no longer a functional choice but a purely technical one, depending on business needs, received data, required processing, logistical constraints, etc. The development team becomes responsible for these issues, while the company/executive vision is to choose the right application vendor (meeting needs, scalability, maintainability, and updates) and to require a generic receptacle to accommodate each evolution within this ETL + ESB platform.\r\n\r\nYou should never have to refactor everything or change the architecture with each new application. Technical expertise is therefore a crucial element to consider if you are planning for the long term.","src/data/blog/etl-vs-esb.md","865360798130f3ab",{html:28,metadata:29},"<blockquote>\n<p>This article is currently available in French. Version sous ce lien —> <a href=\"https://www.data-major.com/fr/etl-esb-comment-choisir/\">Flux de données ETL vs ESB : 5 points clés pour choisir la solution adéquate</a></p>\n</blockquote>\n<h2 id=\"etl-vs-esb-5-key-points-to-choose-the-right-solution\">ETL vs ESB: 5 Key Points to Choose the Right Solution</h2>\n<h3 id=\"what-is-an-etl\">What is an ETL?</h3>\n<p>ETL, <em>Extract Transform Load</em>, is middleware that moves data from point A to point B at defined intervals. These three verbs summarize the three phases, or processes, of each data flow.</p>\n<p>A first <strong>extraction</strong> phase, where data can come from any source—database, FTP, Amazon S3, Dropbox, Google Drive, Linux folder, etc.<br>\nDepending on the source, data can also be extracted in any format: SQL, JSON, XML, EDI, positional, Excel, and more.</p>\n<p><img src=\"https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-121858.png\" alt=\"Diagram of an ETL process\"></p>\n<p>A second <strong>transformation</strong> phase applies business rules, cleans the data, filters out irrelevant data, etc.</p>\n<p>A third <strong>integration</strong> phase loads the data into a target, just like extraction, in any format and source.</p>\n<p><strong>The advantage of ETL</strong> is its flexibility and ability to cover the most common use cases thanks to the diversity of input/output sources and formats.<br>\n<strong>The disadvantage of ETL</strong> is that it can become a “black box” that is difficult to maintain or evolve.</p>\n<h2 id=\"what-is-an-esb\">What is an ESB?</h2>\n<p>ESB, <em>Enterprise Service Bus</em>, allows applications within the same information system—which were not designed to work together—to communicate.</p>\n<p>This issue is resolved by creating a bus that listens for and transmits data from application A to application B, and from application B to application A.</p>\n<p><img src=\"https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122021.png\" alt=\"Diagram of an ESB process\"></p>\n<p>Moreover, if the client’s information system grows—due to an acquisition or the addition of a new tool for business teams, for example—the new application simply needs to be “connected” to the ESB to be integrated into the existing system.</p>\n<p><strong>The advantage</strong> is avoiding a complete overhaul of the information system with each new software or application integration.<br>\n<strong>The disadvantage</strong> is that applications must be able to exchange information in real time, typically using SOAP or REST formats.</p>\n<h2 id=\"how-to-distinguish-an-etl-from-an-esb\">How to Distinguish an ETL from an ESB?</h2>\n<h3 id=\"data-retrieval\">Data Retrieval</h3>\n<p>The main difference between ETL and ESB concerns how data is retrieved.</p>\n<p><img src=\"https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122222-1.png\" alt=\"Diagram comparing ESB/ETL\"></p>\n<p><strong>ETL works in “pull” mode:</strong> the data flow is scheduled, executed on demand, and fetches (=pulls) data from a defined source to perform the required work.</p>\n<p><strong>The ETL flow is active</strong>—it goes to get the data.</p>\n<p><strong>ESB works in “push” mode:</strong> the flow is “event-driven” and is triggered as soon as data is received from a source application.</p>\n<p>Upon receipt, the bus distributes (=pushes) the received information to target applications via a publisher/subscriber system.</p>\n<p><strong>The ESB flow is passive</strong>—it transits the data.</p>\n<h3 id=\"data-integration-delay\">Data Integration Delay</h3>\n<p>The second difference, linked to the first, is the data integration time.</p>\n<p><img src=\"https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122543.png\" alt=\"Processing time\"></p>\n<p><strong>ETL works on a scheduled basis:</strong> data is integrated when the scheduled flow completes its processing.<br>\nDepending on the trigger, the data is synchronized at the end of execution.</p>\n<p>These triggers can be set up hourly, daily, at regular intervals, etc.</p>\n<p><strong>ESB, on the other hand, is event-driven.</strong> It receives data on the bus as soon as it is created or modified in the source application.</p>\n<p>Once received on the bus, the data is sent to targets in real time after simple transformation steps and via a publisher/subscriber system. Unlike ETL, integration is real time.</p>\n<h3 id=\"volume\">Volume</h3>\n<p>The third difference, related to the second, concerns data volume.</p>\n<p>ETL is designed to handle <strong>large volumes</strong> at scheduled times during the day, so at <strong>low intensity</strong>.</p>\n<p>Example: a flow runs once a day, reads a table of ten thousand rows in a database.<br>\nIn this case, it processes ten thousand rows and then stops.</p>\n<p>Conversely, ESB is designed to handle <strong>small volumes</strong> but in real time, so at <strong>high intensity</strong>.</p>\n<p>Example: the bus receives ten thousand independent data items throughout the day.<br>\nIn this case, it processes ten thousand single-row transactions throughout the day, listening after each one (the ESB flow never stops).</p>\n<h3 id=\"complexity\">Complexity</h3>\n<p>The fourth difference, linked to the third, concerns complexity.</p>\n<p>Due to the volume, the ETL flow is more complex to set up because the code must be optimized to handle the load.</p>\n<p>Add to this the “T” process in “ETL,” which involves more transformations.<br>\nAn additional optimization layer is necessary to avoid degrading the performance of the server where the flow runs.</p>\n<p>This may involve writing data to temporary files, for example, to increase the number of “sub-processes” within the flow, allowing data processing to be split into smaller parts.</p>\n<p>The ESB flow, on the other hand, only receives data pushed from the source; its main purpose is to transit the data so applications remain synchronized.</p>\n<p>The number and complexity of transformations in an ESB flow are lower compared to ETL.</p>\n<h3 id=\"machine-resources-and-parallelization\">Machine Resources and Parallelization</h3>\n<p>The fifth and final difference concerns the number of processes and resources consumed simultaneously.</p>\n<p><img src=\"https://www.data-major.com/wp-content/uploads/2024/04/Capture-decran-2024-04-18-122645.png\" alt=\"Processus\"></p>\n<p><strong>ETL flows</strong> run one after another and stop when processing is complete.</p>\n<p>This way of working requires more machine resources to launch, initialize the flow, and execute processing.</p>\n<p>Combined with volume and the number of potential flows, server load can double (or more) if all flows run at once.</p>\n<p>Unlike ESB, which is always listening, the flow is already instantiated and running, resources are ready to use, and incoming data arrives according to the load of the source applications (i.e., the application’s users).</p>\n<p>This way, several requests can be processed simultaneously without impacting machine resources as much as ETL.</p>\n<h2 id=\"how-to-choose-and-do-we-really-have-to-choose\">How to Choose? And Do We Really Have to Choose?</h2>\n<p>Before determining whether your need is for ETL or ESB, ask yourself these five questions:</p>\n<ul>\n<li>\n<p>Is my <strong>data need immediate</strong>?</p>\n<ul>\n<li>If yes, <strong>ESB</strong>; if not, <strong>ETL</strong></li>\n</ul>\n</li>\n<li>\n<p>Do I have <strong>complex transformations</strong>?</p>\n<ul>\n<li>If yes, <strong>ETL</strong>; if not, <strong>ESB</strong></li>\n</ul>\n</li>\n<li>\n<p>Is the <strong>volume</strong> of my data <strong>large</strong>?</p>\n<ul>\n<li>If yes, <strong>ETL</strong>; if not, <strong>ESB</strong></li>\n</ul>\n</li>\n<li>\n<p>Will I need to <strong>add more applications</strong> in the future?</p>\n<ul>\n<li>If yes, <strong>ESB</strong>; if not, <strong>ETL</strong></li>\n</ul>\n</li>\n<li>\n<p>Do I want to <strong>limit my budget</strong>?</p>\n<ul>\n<li>If yes, <strong>ETL</strong>; if not, <strong>ESB</strong></li>\n</ul>\n</li>\n</ul>\n<p>“What if I want to take advantage of both ETL <strong>and</strong> ESB?”</p>\n<p>The difference between ETL and ESB is becoming increasingly subtle; integrators are combining these two technologies to enjoy the benefits of both without the drawbacks, all within the same platform (see Talend API Cloud Services).</p>\n<p>Thus, the question is no longer a functional choice but a purely technical one, depending on business needs, received data, required processing, logistical constraints, etc. The development team becomes responsible for these issues, while the company/executive vision is to choose the right application vendor (meeting needs, scalability, maintainability, and updates) and to require a generic receptacle to accommodate each evolution within this ETL + ESB platform.</p>\n<p>You should never have to refactor everything or change the architecture with each new application. Technical expertise is therefore a crucial element to consider if you are planning for the long term.</p>",{headings:30,localImagePaths:63,remoteImagePaths:64,frontmatter:65,imagePaths:69},[31,35,39,42,45,48,51,54,57,60],{depth:32,slug:33,text:34},2,"etl-vs-esb-5-key-points-to-choose-the-right-solution","ETL vs ESB: 5 Key Points to Choose the Right Solution",{depth:36,slug:37,text:38},3,"what-is-an-etl","What is an ETL?",{depth:32,slug:40,text:41},"what-is-an-esb","What is an ESB?",{depth:32,slug:43,text:44},"how-to-distinguish-an-etl-from-an-esb","How to Distinguish an ETL from an ESB?",{depth:36,slug:46,text:47},"data-retrieval","Data Retrieval",{depth:36,slug:49,text:50},"data-integration-delay","Data Integration Delay",{depth:36,slug:52,text:53},"volume","Volume",{depth:36,slug:55,text:56},"complexity","Complexity",{depth:36,slug:58,text:59},"machine-resources-and-parallelization","Machine Resources and Parallelization",{depth:32,slug:61,text:62},"how-to-choose-and-do-we-really-have-to-choose","How to Choose? And Do We Really Have to Choose?",[],[],{author:14,pubDatetime:66,modDatetime:67,title:17,tags:68,description:23},["Date","2024-02-29T01:08:52.737Z"],["Date","2025-06-05T19:18:52.737Z"],[19,20,21,22],[],"example-draft-post",{id:70,data:72,body:82,filePath:83,digest:84,rendered:85},{author:73,pubDatetime:74,title:75,featured:76,draft:77,tags:78,description:81},"Sat Naing",["Date","2022-06-06T04:06:31.000Z"],"Example Draft Post",false,true,[79,80],"TypeScript","Astro","Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est","Users cannot see this post because it is in draft.\r\n\r\n## Motivation\r\n\r\nrec 1","src/data/blog/examples/example-draft-post.md","77d85a5ebfc0866d",{html:86,metadata:87},"<p>Users cannot see this post because it is in draft.</p>\n<h2 id=\"motivation\">Motivation</h2>\n<p>rec 1</p>",{headings:88,localImagePaths:92,remoteImagePaths:93,frontmatter:94,imagePaths:97},[89],{depth:32,slug:90,text:91},"motivation","Motivation",[],[],{title:75,author:73,pubDatetime:95,slug:70,featured:76,draft:77,tags:96,description:81},["Date","2022-06-06T04:06:31.000Z"],[79,80],[],"db-vs-dw-dl",{id:98,data:100,body:109,filePath:110,digest:111,rendered:112},{author:14,pubDatetime:101,modDatetime:102,title:103,tags:104,description:108},["Date","2025-08-01T12:15:52.737Z"],["Date","2025-08-02T10:18:52.737Z"],"Database vs Data Warehouse vs Data Lake | Key Differences and Best Use Cases",[19,20,105,106,107],"database","data warehouse","data lake","Understanding how they differ and determining which one fits your requirements best","## Introduction\r\n\r\nIn the world of data and digitalization, storage is always an up-to-date topic. From floppy disks to CDs, USB sticks, hard drives, SSDs, and NVMe drives, the evolution of storing information, whether programs, pictures, music, or videos,the evolution of storing data is linked to the current technology.\r\n\r\nThe choice of storage solution depends on your specific needs and the era you're in (no more floppy disk unfortunately) \r\n\r\nBut this data storage is only linked to individuals, storing private or critical information, but plug-in the device to access it. As a company, the need is quite different...\r\n\r\nIn the business world (for data field), storage systems have evolved accordingly, and now companies have (too much) choices that brings new challenges:\r\n- How to store data ? For minutes, years, or temporarily?\r\n- How to decide whether data is needed for analytics or transaction processing?\r\n- How to store based on the companies IT budget and management?\r\n\r\nThose questions belong to the technical team and engineering department, but the technical solution **must** solve business problems. To make the right choice, we need to understand the company's specific needs and objectives.\r\n\r\n# Ask questions\r\n\r\n- \"What is the current problem?\"\r\n- \"What do you want to achieve?\"\r\n- \"What is the purpose?\"\r\n\r\nThose are always the most obvious questions, yet sometimes the one we forget: \r\n<mark>What are the company's goals for using their data?</mark>\r\n\r\nWithout knowing why the company needs a specific proper storage, then it's impossible to bring a proper solution.\r\n\r\nIf the answer is \"We don't know yet, but we'll figure it out later...\" then you can be almost certain that a **database** will be chosen, that's the default choice. As simple as it sounds, a simple database give opportunities to the business to store in a shared place, important information accross the entity.\r\n\r\n- **Databases are versatile** and not expensive\r\n- **Easily accessible** through SQL\r\n- **Manageable data volumes** with simple indexing, query optimization, and good architecture and design (pivot table fo example)\r\n- **Not that technically impossible** lots of resources online exists on how to setup a proper database, with basic roles and minimum security\r\n\r\nIf the company knows exactly what they want to achieve—for example, if analytics is a priority—a **data warehouse** might be more appropriate. \r\n\r\nData warehouses focus primarily on analytics and query performance, often complementing rather than replacing traditional databases when the business starts to deal with more and more data.\r\n\r\n# Available Solutions\r\n\r\n## No One-Size-Fits-All Approach\r\n\r\nNothing is black or white. \r\nEven combinations of databases, data warehouses, and data lakes will have their challenges. The best solution isn't necessarily the most \"trendy,\" \"beautiful,\" or \"used by other companies.\" \r\n\r\nThe best solution is <mark>the one that solves the specific problems identified in the \"Ask questions\" section.</mark>\r\n\r\nCurrently, the market offers numerous choices. Data solutions can be deployed in:\r\n- **Public cloud** environments\r\n- **Private cloud** setups\r\n- **On-premise** infrastructure in company server rooms\r\n\r\n# Detailing the 3 main solutions\r\n\r\n## 1. Database\r\n**Best for:** Transactional processing, real-time operations, structured data\r\n- **Use cases:** Customer records, order processing, inventory management\r\n- **Characteristics:** ACID compliance, fast read/write operations, structured schema\r\n- **Examples:** PostgreSQL, MySQL, Oracle, SQL Server\r\n\r\n## 2. Data Warehouse\r\n**Best for:** Analytics, reporting, business intelligence\r\n- **Use cases:** Historical analysis, trend reporting, executive dashboards\r\n- **Characteristics:** Optimized for complex queries, columnar storage, data modeling\r\n- **Examples:** Amazon Redshift, Snowflake, Google BigQuery, Azure Synapse\r\n\r\n## 3. Data Lake\r\n**Best for:** Raw data storage, machine learning, exploratory analysis\r\n- **Use cases:** IoT data, log files, unstructured data, data science projects\r\n- **Characteristics:** Schema-on-read, scalable storage, supports multiple data formats\r\n- **Examples:** Amazon S3, Azure Data Lake, Google Cloud Storage\r\n\r\n# Making the Right Choice\r\n\r\nWhen choosing between these solutions, more questions needs to be answered:\r\n\r\n1. **Data Volume:** How much data do you need to store and process?\r\n2. **Data Velocity:** How fast is data being generated and how quickly do you need to access it?\r\n3. **Data Variety:** What types of data are you working with (structured, semi-structured, unstructured)?\r\n4. **Use Case:** Are you primarily doing transactions, analytics, or both?\r\n5. **Budget:** What are your cost constraints and ROI expectations?\r\n6. **Team Expertise:** What skills does your team have?\r\n\r\n## Conclusion\r\n\r\nThe choice between a database, data warehouse, or data lake (or a combination) should be driven by the specific business requirements from the company, not by industry trends. \r\n\r\nFirst start by clearly defining the data goals, then select the solution that solve the problem considering a balance between technical capabilities and budget constraints.\r\n\r\nAs a reminder : the most expensive or complex solution isn't always the best one. \r\n\r\nFocus on solving your actual business problems rather than building infrastructure for problems you might have in the future (because they might never happens)\r\n\r\n---\r\n\r\n*Thanks for reading this article. If you have comments feel free to reach me by mail or fill up [the form](https://jeoste.github.io/contact) directly and I'll personally answer you.*","src/data/blog/db-vs-dw-dl.md","adab85be6051886b",{html:113,metadata:114},"<h2 id=\"introduction\">Introduction</h2>\n<p>In the world of data and digitalization, storage is always an up-to-date topic. From floppy disks to CDs, USB sticks, hard drives, SSDs, and NVMe drives, the evolution of storing information, whether programs, pictures, music, or videos,the evolution of storing data is linked to the current technology.</p>\n<p>The choice of storage solution depends on your specific needs and the era you’re in (no more floppy disk unfortunately)</p>\n<p>But this data storage is only linked to individuals, storing private or critical information, but plug-in the device to access it. As a company, the need is quite different…</p>\n<p>In the business world (for data field), storage systems have evolved accordingly, and now companies have (too much) choices that brings new challenges:</p>\n<ul>\n<li>How to store data ? For minutes, years, or temporarily?</li>\n<li>How to decide whether data is needed for analytics or transaction processing?</li>\n<li>How to store based on the companies IT budget and management?</li>\n</ul>\n<p>Those questions belong to the technical team and engineering department, but the technical solution <strong>must</strong> solve business problems. To make the right choice, we need to understand the company’s specific needs and objectives.</p>\n<h1 id=\"ask-questions\">Ask questions</h1>\n<ul>\n<li>“What is the current problem?”</li>\n<li>“What do you want to achieve?”</li>\n<li>“What is the purpose?”</li>\n</ul>\n<p>Those are always the most obvious questions, yet sometimes the one we forget:\r\n<mark>What are the company’s goals for using their data?</mark></p>\n<p>Without knowing why the company needs a specific proper storage, then it’s impossible to bring a proper solution.</p>\n<p>If the answer is “We don’t know yet, but we’ll figure it out later…” then you can be almost certain that a <strong>database</strong> will be chosen, that’s the default choice. As simple as it sounds, a simple database give opportunities to the business to store in a shared place, important information accross the entity.</p>\n<ul>\n<li><strong>Databases are versatile</strong> and not expensive</li>\n<li><strong>Easily accessible</strong> through SQL</li>\n<li><strong>Manageable data volumes</strong> with simple indexing, query optimization, and good architecture and design (pivot table fo example)</li>\n<li><strong>Not that technically impossible</strong> lots of resources online exists on how to setup a proper database, with basic roles and minimum security</li>\n</ul>\n<p>If the company knows exactly what they want to achieve—for example, if analytics is a priority—a <strong>data warehouse</strong> might be more appropriate.</p>\n<p>Data warehouses focus primarily on analytics and query performance, often complementing rather than replacing traditional databases when the business starts to deal with more and more data.</p>\n<h1 id=\"available-solutions\">Available Solutions</h1>\n<h2 id=\"no-one-size-fits-all-approach\">No One-Size-Fits-All Approach</h2>\n<p>Nothing is black or white.\r\nEven combinations of databases, data warehouses, and data lakes will have their challenges. The best solution isn’t necessarily the most “trendy,” “beautiful,” or “used by other companies.”</p>\n<p>The best solution is <mark>the one that solves the specific problems identified in the “Ask questions” section.</mark></p>\n<p>Currently, the market offers numerous choices. Data solutions can be deployed in:</p>\n<ul>\n<li><strong>Public cloud</strong> environments</li>\n<li><strong>Private cloud</strong> setups</li>\n<li><strong>On-premise</strong> infrastructure in company server rooms</li>\n</ul>\n<h1 id=\"detailing-the-3-main-solutions\">Detailing the 3 main solutions</h1>\n<h2 id=\"1-database\">1. Database</h2>\n<p><strong>Best for:</strong> Transactional processing, real-time operations, structured data</p>\n<ul>\n<li><strong>Use cases:</strong> Customer records, order processing, inventory management</li>\n<li><strong>Characteristics:</strong> ACID compliance, fast read/write operations, structured schema</li>\n<li><strong>Examples:</strong> PostgreSQL, MySQL, Oracle, SQL Server</li>\n</ul>\n<h2 id=\"2-data-warehouse\">2. Data Warehouse</h2>\n<p><strong>Best for:</strong> Analytics, reporting, business intelligence</p>\n<ul>\n<li><strong>Use cases:</strong> Historical analysis, trend reporting, executive dashboards</li>\n<li><strong>Characteristics:</strong> Optimized for complex queries, columnar storage, data modeling</li>\n<li><strong>Examples:</strong> Amazon Redshift, Snowflake, Google BigQuery, Azure Synapse</li>\n</ul>\n<h2 id=\"3-data-lake\">3. Data Lake</h2>\n<p><strong>Best for:</strong> Raw data storage, machine learning, exploratory analysis</p>\n<ul>\n<li><strong>Use cases:</strong> IoT data, log files, unstructured data, data science projects</li>\n<li><strong>Characteristics:</strong> Schema-on-read, scalable storage, supports multiple data formats</li>\n<li><strong>Examples:</strong> Amazon S3, Azure Data Lake, Google Cloud Storage</li>\n</ul>\n<h1 id=\"making-the-right-choice\">Making the Right Choice</h1>\n<p>When choosing between these solutions, more questions needs to be answered:</p>\n<ol>\n<li><strong>Data Volume:</strong> How much data do you need to store and process?</li>\n<li><strong>Data Velocity:</strong> How fast is data being generated and how quickly do you need to access it?</li>\n<li><strong>Data Variety:</strong> What types of data are you working with (structured, semi-structured, unstructured)?</li>\n<li><strong>Use Case:</strong> Are you primarily doing transactions, analytics, or both?</li>\n<li><strong>Budget:</strong> What are your cost constraints and ROI expectations?</li>\n<li><strong>Team Expertise:</strong> What skills does your team have?</li>\n</ol>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>The choice between a database, data warehouse, or data lake (or a combination) should be driven by the specific business requirements from the company, not by industry trends.</p>\n<p>First start by clearly defining the data goals, then select the solution that solve the problem considering a balance between technical capabilities and budget constraints.</p>\n<p>As a reminder : the most expensive or complex solution isn’t always the best one.</p>\n<p>Focus on solving your actual business problems rather than building infrastructure for problems you might have in the future (because they might never happens)</p>\n<hr>\n<p><em>Thanks for reading this article. If you have comments feel free to reach me by mail or fill up <a href=\"https://jeoste.github.io/contact\">the form</a> directly and I’ll personally answer you.</em></p>",{headings:115,localImagePaths:147,remoteImagePaths:148,frontmatter:149,imagePaths:153},[116,119,123,126,129,132,135,138,141,144],{depth:32,slug:117,text:118},"introduction","Introduction",{depth:120,slug:121,text:122},1,"ask-questions","Ask questions",{depth:120,slug:124,text:125},"available-solutions","Available Solutions",{depth:32,slug:127,text:128},"no-one-size-fits-all-approach","No One-Size-Fits-All Approach",{depth:120,slug:130,text:131},"detailing-the-3-main-solutions","Detailing the 3 main solutions",{depth:32,slug:133,text:134},"1-database","1. Database",{depth:32,slug:136,text:137},"2-data-warehouse","2. Data Warehouse",{depth:32,slug:139,text:140},"3-data-lake","3. Data Lake",{depth:120,slug:142,text:143},"making-the-right-choice","Making the Right Choice",{depth:32,slug:145,text:146},"conclusion","Conclusion",[],[],{author:14,pubDatetime:150,modDatetime:151,title:103,tags:152,description:108},["Date","2025-08-01T12:15:52.737Z"],["Date","2025-08-02T10:18:52.737Z"],[19,20,105,106,107],[],"how-do-i-develop-my-portfolio-and-blog",{id:154,data:156,body:166,filePath:167,digest:168,rendered:169},{author:73,pubDatetime:157,title:158,featured:76,draft:77,tags:159,description:164,timezone:165},["Date","2022-03-25T16:55:12.000Z"],"How Do I Develop My Portfolio Website & Blog",[160,161,162,163],"NextJS","TailwindCSS","HeadlessCMS","Blog","EXAMPLE POST: My experience about developing my first portfolio website and a blog using NextJS and a headless CMS.","Asia/Yangon","> This article is originally from my [blog post](https://satnaing.dev/blog/posts/how-do-i-develop-my-portfolio-and-blog). I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.\r\n\r\nMy experience about developing my first portfolio website and a blog using NextJS and a headless CMS.\r\n\r\n![Building portfolio](https://satnaing.dev/_ipx/w_2048,q_75/https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1653050141%2FSatNaing%2Fblog_at_cafe_ei1wf4.jpg?url=https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1653050141%2FSatNaing%2Fblog_at_cafe_ei1wf4.jpg&w=2048&q=75)\r\n\r\n## Motivation\r\n\r\nI've been always thinking about launching my own website with my custom domain name (**satnaing.dev**) since my college student life. But that never happened until this project. I've done several projects and works about web application development but I didn't make an effort to do this.\r\n\r\nSo, \"what about blog?\" you may ask. Yeah, blog also has been in my project list for some time. I always wanted to make a blog project using some of the latest technologies. However, I've been busy with my works and other projects so that blog project has never been started.\r\n\r\nIn these days, I tend to develop my own projects with the focus in good quality rather than quantity. After the project is done, I usually put a proper readme file in the Github repo. But Github repo readme is only suitable for technical aspects (this is just my thought). I want to write down my experiences and challenges. Thus, I decided to make my own blog. Plus, at this point, I have decent experiences and confidence to develop this project.\r\n\r\n## Tech Stack\r\n\r\nFor the front-end, I wanted to use [React](https://reactjs.org/ \"React Official Website\"). But React alone is not good enough for SEO; and I did have to consider many factors like routing, image optimization etc. So, I chose [NextJS](https://nextjs.org/ \"NextJS Official Website\") as my main front-end stack. And of course TypeScript for type checking. (It's said that you'll love TypeScript when you're used to it 😉)\r\n\r\nFor styling, I use [TailwindCSS](https://tailwindcss.com/ \"Tailwind CSS Official Website\"). This is because I love developer experience that Tailwind gives and it has a lot of flexibilities compared to other component UI libraries like MUI or React Bootstrap.\r\n\r\nAll contents of this project reside within the GitHub repository. All my blog posts (including this one) are written in Markdown file format since I'm very used to with this. But to write Markdown along with its frontmatter effortlessly, I use [Forestry](https://forestry.io/ \"Forestry Official Website\") headless CMS. It is a git-based CMS that can serve Markdown and other contents. Because of this, I can write my contents either using Markdown or wysiwyg editor. Besides, writing frontmatters with this is a breeze.\r\n\r\nImages and assets are uploaded and stored in [Cloudinary](https://cloudinary.com/ \"Cloudinary Official Website\"). I connect Cloudinary via Forestry and manage them directly in the dashboard.\r\n\r\nIn conclusion, these are the tech stack I've used for this project.\r\n\r\n- Front-end: NextJS (TypeScript)\r\n- Styling: TailwindCSS\r\n- Animations: GSAP\r\n- CMS: Forestry Headless CMS\r\n- Deployment: Vercel\r\n\r\n## Features\r\n\r\nThe following are certain features of my portfolio and blog\r\n\r\n### SEO Friendly\r\n\r\nThe entire project is developed with SEO focus in mind. I've used proper meta tags, descriptions and heading alignments. This website is now indexed by Google.\r\n\r\n> You can search this website on google by using keywords like 'sat naing dev'\r\n\r\n![searching satnaing.dev on google](https://res.cloudinary.com/noezectz/image/upload/v1648231400/SatNaing/satnaing-on-google_asflq6.png \"satnaing.dev is indexed\")\r\n\r\nMoreover, this website will be displayed well when shared to social media due to properly used meta tags.\r\n\r\n![satnaing.dev card layout when shared to Facebook](https://res.cloudinary.com/noezectz/image/upload/v1653106955/SatNaing/satnaing-dev-share-on-facebook_1_zjoehx.png \"Card layout when shared to Facebook\")\r\n\r\n### Dynamic Sitemap\r\n\r\nSitemap plays an important part in SEO. Because of this, every single page of this site should be included in sitemap.xml. I made an auto generated sitemap in my website whenever I create a new content or tags or categories.\r\n\r\n### Light & Dark Themes\r\n\r\nDue to dark theme trend in recent years, many websites include dark theme out of the box nowadays. Certainly, my website also supports light & dark themes.\r\n\r\n### Fully Accessible\r\n\r\nThis website is fully accessible. You can navigate around by only using keyboard. I put all a11y enhancement best practices like including alt text in all images, no skipping headings, using semantic HTML tags, using aria-attributes properly.\r\n\r\n### Search box, Categories & Tags\r\n\r\nAll blog contents can be searched by search box. Moreover, contents can be filtered by categories and tags. In this way, blog readers can search and read what they really want.\r\n\r\n### Performance and Lighthouse Score\r\n\r\nThis website got very good performance and lighthouse score thanks to proper development and best practices. Here's the lighthouse score for this website.\r\n\r\n![satnaing.dev Lighthouse score](https://user-images.githubusercontent.com/53733092/159957822-7082e459-11e9-4616-8f1e-49d0881f7cbb.png \"satnaing.dev Lighthouse score\")\r\n\r\n### Animations\r\n\r\nInitially I used [Framer Motion](https://www.framer.com/motion/ \"Framer Motion\") to add animations and micro interactions for this website. However, when I tried to use some complex animations and parallax effects, I found it inconvenient to integrate with Framer Motion (Maybe I'm not very good at and used to working with it). Hence, I decided to use [GSAP](https://greensock.com/ \"GSAP Animation Library\") for all of my animations. It is one of the most popular animation library and it is capable of doing complex and advanced animations. You can see animations and micro interactions on pretty much every page of this website.\r\n\r\n![animations at satnaing.dev](https://res.cloudinary.com/noezectz/image/upload/v1653108324/SatNaing/ezgif.com-gif-maker_2_hehtlm.gif \"satnaing.dev website\")\r\n\r\n## Outro\r\n\r\nIn conclusion, this project gives me a lot of experience and confidence about developing blog site (SSG). Now, I have gained knowledge of git-based CMS and how it interacts with NextJS. I've also learned about SEO, dynamic sitemap generation and indexing Google procedures. I will make better projects in the future. So, stay tuned! ✌🏻\r\n\r\nAnd... last but not least, I would like to say 'thanks' to my friend [Swann Fevian Kyaw](https://www.facebook.com/bon.zai.3910 \"Swann Fevian Kyaw's Facebook Account\") (@[ToonHa](https://www.facebook.com/ToonHa-102639465752883 \"ToonHa Facebook Page\")) who has drawn a beautiful illustration for my hero section of the website.\r\n\r\n## Project Links\r\n\r\n- Website: [https://satnaing.dev/](https://satnaing.dev/ \"https://satnaing.dev/\")\r\n- Blog: [https://satnaing.dev/blog](https://satnaing.dev/blog \"https://satnaing.dev/blog\")\r\n- Repo: [https://github.com/satnaing/my-portfolio](https://github.com/satnaing/my-portfolio \"https://github.com/satnaing/my-portfolio\")","src/data/blog/examples/portfolio-website-development.md","270a11490413fc9f",{html:170,metadata:171},"<blockquote>\n<p>This article is originally from my <a href=\"https://satnaing.dev/blog/posts/how-do-i-develop-my-portfolio-and-blog\">blog post</a>. I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.</p>\n</blockquote>\n<p>My experience about developing my first portfolio website and a blog using NextJS and a headless CMS.</p>\n<p><img src=\"https://satnaing.dev/_ipx/w_2048,q_75/https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1653050141%2FSatNaing%2Fblog_at_cafe_ei1wf4.jpg?url=https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1653050141%2FSatNaing%2Fblog_at_cafe_ei1wf4.jpg&#x26;w=2048&#x26;q=75\" alt=\"Building portfolio\"></p>\n<h2 id=\"motivation\">Motivation</h2>\n<p>I’ve been always thinking about launching my own website with my custom domain name (<strong>satnaing.dev</strong>) since my college student life. But that never happened until this project. I’ve done several projects and works about web application development but I didn’t make an effort to do this.</p>\n<p>So, “what about blog?” you may ask. Yeah, blog also has been in my project list for some time. I always wanted to make a blog project using some of the latest technologies. However, I’ve been busy with my works and other projects so that blog project has never been started.</p>\n<p>In these days, I tend to develop my own projects with the focus in good quality rather than quantity. After the project is done, I usually put a proper readme file in the Github repo. But Github repo readme is only suitable for technical aspects (this is just my thought). I want to write down my experiences and challenges. Thus, I decided to make my own blog. Plus, at this point, I have decent experiences and confidence to develop this project.</p>\n<h2 id=\"tech-stack\">Tech Stack</h2>\n<p>For the front-end, I wanted to use <a href=\"https://reactjs.org/\" title=\"React Official Website\">React</a>. But React alone is not good enough for SEO; and I did have to consider many factors like routing, image optimization etc. So, I chose <a href=\"https://nextjs.org/\" title=\"NextJS Official Website\">NextJS</a> as my main front-end stack. And of course TypeScript for type checking. (It’s said that you’ll love TypeScript when you’re used to it 😉)</p>\n<p>For styling, I use <a href=\"https://tailwindcss.com/\" title=\"Tailwind CSS Official Website\">TailwindCSS</a>. This is because I love developer experience that Tailwind gives and it has a lot of flexibilities compared to other component UI libraries like MUI or React Bootstrap.</p>\n<p>All contents of this project reside within the GitHub repository. All my blog posts (including this one) are written in Markdown file format since I’m very used to with this. But to write Markdown along with its frontmatter effortlessly, I use <a href=\"https://forestry.io/\" title=\"Forestry Official Website\">Forestry</a> headless CMS. It is a git-based CMS that can serve Markdown and other contents. Because of this, I can write my contents either using Markdown or wysiwyg editor. Besides, writing frontmatters with this is a breeze.</p>\n<p>Images and assets are uploaded and stored in <a href=\"https://cloudinary.com/\" title=\"Cloudinary Official Website\">Cloudinary</a>. I connect Cloudinary via Forestry and manage them directly in the dashboard.</p>\n<p>In conclusion, these are the tech stack I’ve used for this project.</p>\n<ul>\n<li>Front-end: NextJS (TypeScript)</li>\n<li>Styling: TailwindCSS</li>\n<li>Animations: GSAP</li>\n<li>CMS: Forestry Headless CMS</li>\n<li>Deployment: Vercel</li>\n</ul>\n<h2 id=\"features\">Features</h2>\n<p>The following are certain features of my portfolio and blog</p>\n<h3 id=\"seo-friendly\">SEO Friendly</h3>\n<p>The entire project is developed with SEO focus in mind. I’ve used proper meta tags, descriptions and heading alignments. This website is now indexed by Google.</p>\n<blockquote>\n<p>You can search this website on google by using keywords like ‘sat naing dev’</p>\n</blockquote>\n<p><img src=\"https://res.cloudinary.com/noezectz/image/upload/v1648231400/SatNaing/satnaing-on-google_asflq6.png\" alt=\"searching satnaing.dev on google\" title=\"satnaing.dev is indexed\"></p>\n<p>Moreover, this website will be displayed well when shared to social media due to properly used meta tags.</p>\n<p><img src=\"https://res.cloudinary.com/noezectz/image/upload/v1653106955/SatNaing/satnaing-dev-share-on-facebook_1_zjoehx.png\" alt=\"satnaing.dev card layout when shared to Facebook\" title=\"Card layout when shared to Facebook\"></p>\n<h3 id=\"dynamic-sitemap\">Dynamic Sitemap</h3>\n<p>Sitemap plays an important part in SEO. Because of this, every single page of this site should be included in sitemap.xml. I made an auto generated sitemap in my website whenever I create a new content or tags or categories.</p>\n<h3 id=\"light--dark-themes\">Light &#x26; Dark Themes</h3>\n<p>Due to dark theme trend in recent years, many websites include dark theme out of the box nowadays. Certainly, my website also supports light &#x26; dark themes.</p>\n<h3 id=\"fully-accessible\">Fully Accessible</h3>\n<p>This website is fully accessible. You can navigate around by only using keyboard. I put all a11y enhancement best practices like including alt text in all images, no skipping headings, using semantic HTML tags, using aria-attributes properly.</p>\n<h3 id=\"search-box-categories--tags\">Search box, Categories &#x26; Tags</h3>\n<p>All blog contents can be searched by search box. Moreover, contents can be filtered by categories and tags. In this way, blog readers can search and read what they really want.</p>\n<h3 id=\"performance-and-lighthouse-score\">Performance and Lighthouse Score</h3>\n<p>This website got very good performance and lighthouse score thanks to proper development and best practices. Here’s the lighthouse score for this website.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53733092/159957822-7082e459-11e9-4616-8f1e-49d0881f7cbb.png\" alt=\"satnaing.dev Lighthouse score\" title=\"satnaing.dev Lighthouse score\"></p>\n<h3 id=\"animations\">Animations</h3>\n<p>Initially I used <a href=\"https://www.framer.com/motion/\" title=\"Framer Motion\">Framer Motion</a> to add animations and micro interactions for this website. However, when I tried to use some complex animations and parallax effects, I found it inconvenient to integrate with Framer Motion (Maybe I’m not very good at and used to working with it). Hence, I decided to use <a href=\"https://greensock.com/\" title=\"GSAP Animation Library\">GSAP</a> for all of my animations. It is one of the most popular animation library and it is capable of doing complex and advanced animations. You can see animations and micro interactions on pretty much every page of this website.</p>\n<p><img src=\"https://res.cloudinary.com/noezectz/image/upload/v1653108324/SatNaing/ezgif.com-gif-maker_2_hehtlm.gif\" alt=\"animations at satnaing.dev\" title=\"satnaing.dev website\"></p>\n<h2 id=\"outro\">Outro</h2>\n<p>In conclusion, this project gives me a lot of experience and confidence about developing blog site (SSG). Now, I have gained knowledge of git-based CMS and how it interacts with NextJS. I’ve also learned about SEO, dynamic sitemap generation and indexing Google procedures. I will make better projects in the future. So, stay tuned! ✌🏻</p>\n<p>And… last but not least, I would like to say ‘thanks’ to my friend <a href=\"https://www.facebook.com/bon.zai.3910\" title=\"Swann Fevian Kyaw&#x27;s Facebook Account\">Swann Fevian Kyaw</a> (@<a href=\"https://www.facebook.com/ToonHa-102639465752883\" title=\"ToonHa Facebook Page\">ToonHa</a>) who has drawn a beautiful illustration for my hero section of the website.</p>\n<h2 id=\"project-links\">Project Links</h2>\n<ul>\n<li>Website: <a href=\"https://satnaing.dev/\" title=\"https://satnaing.dev/\">https://satnaing.dev/</a></li>\n<li>Blog: <a href=\"https://satnaing.dev/blog\" title=\"https://satnaing.dev/blog\">https://satnaing.dev/blog</a></li>\n<li>Repo: <a href=\"https://github.com/satnaing/my-portfolio\" title=\"https://github.com/satnaing/my-portfolio\">https://github.com/satnaing/my-portfolio</a></li>\n</ul>",{headings:172,localImagePaths:207,remoteImagePaths:208,frontmatter:209,imagePaths:212},[173,174,177,180,183,186,189,192,195,198,201,204],{depth:32,slug:90,text:91},{depth:32,slug:175,text:176},"tech-stack","Tech Stack",{depth:32,slug:178,text:179},"features","Features",{depth:36,slug:181,text:182},"seo-friendly","SEO Friendly",{depth:36,slug:184,text:185},"dynamic-sitemap","Dynamic Sitemap",{depth:36,slug:187,text:188},"light--dark-themes","Light & Dark Themes",{depth:36,slug:190,text:191},"fully-accessible","Fully Accessible",{depth:36,slug:193,text:194},"search-box-categories--tags","Search box, Categories & Tags",{depth:36,slug:196,text:197},"performance-and-lighthouse-score","Performance and Lighthouse Score",{depth:36,slug:199,text:200},"animations","Animations",{depth:32,slug:202,text:203},"outro","Outro",{depth:32,slug:205,text:206},"project-links","Project Links",[],[],{title:158,author:73,pubDatetime:210,slug:154,featured:76,draft:77,tags:211,description:164,timezone:165},["Date","2022-03-25T16:55:12.000Z"],[160,161,162,163],[],"how-do-i-develop-my-terminal-portfolio-website-with-react",{id:213,data:215,body:224,filePath:225,digest:226,rendered:227},{author:73,pubDatetime:216,title:217,featured:76,draft:77,tags:218,description:223,timezone:165},["Date","2022-06-09T03:42:51.000Z"],"How Do I Develop My Terminal Portfolio Website with React",[219,220,221,222,79],"JavaScript","ReactJS","ContextAPI","Styled-Components","EXAMPLE POST: Developing a terminal-like website using ReactJS, TypeScript and Styled-Components. Includes features like autocomplete, multiple themes, command hints etc.","> This article is originally from my [blog post](https://satnaing.dev/blog/posts/how-do-i-develop-my-terminal-portfolio-website-with-react). I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.\r\n\r\nDeveloping a terminal-like website using ReactJS, TypeScript and Styled-Components. Includes features like autocomplete, multiple themes, command hints etc.\r\n\r\n![Sat Naing's Terminal Portfolio](https://satnaing.dev/_ipx/w_2048,q_75/https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1654754125%2FSatNaing%2Fterminal-screenshot_gu3kkc.png?url=https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1654754125%2FSatNaing%2Fterminal-screenshot_gu3kkc.png&w=2048&q=75)\r\n\r\n## Table of contents\r\n\r\n## Intro\r\n\r\nRecently, I've developed and published my portfolio + a blog. I’m glad I got some good feedback for it. Today, I want to introduce my new terminal-like portfolio website. It is developed using ReactJS, TypeScript. I got this idea from CodePen and YouTube.\r\n\r\n## Tech Stack\r\n\r\nThis project is a frontend project without any backend codes. The UI/UX part is designed in Figma. For the frontend user-interface, I chose React over pain JavaScript and NextJS. Why?\r\n\r\n- Firstly, I want to write declarative code. Managing HTML DOM using JavaScript imperatively is really tedious.\r\n- Secondly, because it is React!!! It is fast, and reliable.\r\n- Lastly, I don’t need much of the SEO features, routing and image optimization provided by NextJS.\r\n\r\nAnd of course there's TypeScript for type checking.\r\n\r\nFor styling, I took a different approach than what I usually do. Instead of choosing Pure CSS, Sass, or Utility CSS Framework like TailwindCSS, I chose the CSS-in-JS way (Styled-Components). Although I’ve known about Styled-Components for some time, I’ve never tried it out. So, the writing style and structures of Styled-Components in this project may not be very organized or very good.\r\n\r\nThis project doesn’t need very complex state management. I just use ContextAPI in this project for multiple theming and to avoid prop drilling.\r\n\r\nHere’s a quick recap for the tech stack.\r\n\r\n- Frontend: [ReactJS](https://reactjs.org/ \"React Website\"), [TypeScript](https://www.typescriptlang.org/ \"TypeScript Website\")\r\n- Styling: [Styled-Components](https://styled-components.com/ \"Styled-Components Website\")\r\n- UI/UX: [Figma](https://figma.com/ \"Figma Website\")\r\n- State Management: [ContextAPI](https://reactjs.org/docs/context.html \"React ContextAPI\")\r\n- Deployment: [Netlify](https://www.netlify.com/ \"Netlify Website\")\r\n\r\n## Features\r\n\r\nHere are some features of the project.\r\n\r\n### Multiple Themes\r\n\r\nUsers can change multiple themes. At the time of writing this post, there are 5 themes; and more themes will probably be added in the future. The selected theme is saved in local storage so that the theme won’t change on page refresh.\r\n\r\n![Setting different theme](https://i.ibb.co/fSTCnWB/terminal-portfolio-multiple-themes.gif)\r\n\r\n### Command-line Completion\r\n\r\nTo look and feel as close to the actual terminal as possible, I put a command-line completion feature which auto fills in partially typed commands by simply pressing ‘Tab’ or ‘Ctrl + i’.\r\n\r\n![Demonstrating command-line completion](https://i.ibb.co/CQTGGLF/terminal-autocomplete.gif)\r\n\r\n### Previous Commands\r\n\r\nUsers can go back to the previous commands or navigate the previously typed commands by pressing Up & Down Arrows.\r\n\r\n![Going back to previous commands with UP Arrow](https://i.ibb.co/vD1pSRv/terminal-up-down.gif)\r\n\r\n### View/Clear Command History\r\n\r\npreviously typed commands can be viewed by typing ‘history’ in the command line. All the command history and terminal screen can be wiped out by typing ‘clear’ or pressing ‘Ctrl + l’.\r\n\r\n![Clearing the terminal with 'clear' or 'Ctrl + L' command](https://i.ibb.co/SJBy8Rr/terminal-clear.gif)\r\n\r\n## Outro\r\n\r\nThis is a really fun project, and one special part of this project is I had to focus on logic rather than user-interface (even though this is kind of a frontend project).\r\n\r\n## Project Links\r\n\r\n- Website: [https://terminal.satnaing.dev/](https://terminal.satnaing.dev/ \"https://terminal.satnaing.dev/\")\r\n- Repo: [https://github.com/satnaing/terminal-portfolio](https://github.com/satnaing/terminal-portfolio \"https://github.com/satnaing/terminal-portfolio\")","src/data/blog/examples/terminal-development.md","63048a24f23e9de8",{html:228,metadata:229},"<blockquote>\n<p>This article is originally from my <a href=\"https://satnaing.dev/blog/posts/how-do-i-develop-my-terminal-portfolio-website-with-react\">blog post</a>. I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.</p>\n</blockquote>\n<p>Developing a terminal-like website using ReactJS, TypeScript and Styled-Components. Includes features like autocomplete, multiple themes, command hints etc.</p>\n<p><img src=\"https://satnaing.dev/_ipx/w_2048,q_75/https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1654754125%2FSatNaing%2Fterminal-screenshot_gu3kkc.png?url=https%3A%2F%2Fres.cloudinary.com%2Fnoezectz%2Fimage%2Fupload%2Fv1654754125%2FSatNaing%2Fterminal-screenshot_gu3kkc.png&#x26;w=2048&#x26;q=75\" alt=\"Sat Naing&#x27;s Terminal Portfolio\"></p>\n<h2 id=\"table-of-contents\">Table of contents</h2>\n<p></p><details><summary>Open Table of contents</summary><p></p>\n<ul>\n<li><a href=\"#intro\">Intro</a></li>\n<li><a href=\"#tech-stack\">Tech Stack</a></li>\n<li><a href=\"#features\">Features</a>\n<ul>\n<li><a href=\"#multiple-themes\">Multiple Themes</a></li>\n<li><a href=\"#command-line-completion\">Command-line Completion</a></li>\n<li><a href=\"#previous-commands\">Previous Commands</a></li>\n<li><a href=\"#viewclear-command-history\">View/Clear Command History</a></li>\n</ul>\n</li>\n<li><a href=\"#outro\">Outro</a></li>\n<li><a href=\"#project-links\">Project Links</a></li>\n</ul>\n<p></p></details><p></p>\n<h2 id=\"intro\">Intro</h2>\n<p>Recently, I’ve developed and published my portfolio + a blog. I’m glad I got some good feedback for it. Today, I want to introduce my new terminal-like portfolio website. It is developed using ReactJS, TypeScript. I got this idea from CodePen and YouTube.</p>\n<h2 id=\"tech-stack\">Tech Stack</h2>\n<p>This project is a frontend project without any backend codes. The UI/UX part is designed in Figma. For the frontend user-interface, I chose React over pain JavaScript and NextJS. Why?</p>\n<ul>\n<li>Firstly, I want to write declarative code. Managing HTML DOM using JavaScript imperatively is really tedious.</li>\n<li>Secondly, because it is React!!! It is fast, and reliable.</li>\n<li>Lastly, I don’t need much of the SEO features, routing and image optimization provided by NextJS.</li>\n</ul>\n<p>And of course there’s TypeScript for type checking.</p>\n<p>For styling, I took a different approach than what I usually do. Instead of choosing Pure CSS, Sass, or Utility CSS Framework like TailwindCSS, I chose the CSS-in-JS way (Styled-Components). Although I’ve known about Styled-Components for some time, I’ve never tried it out. So, the writing style and structures of Styled-Components in this project may not be very organized or very good.</p>\n<p>This project doesn’t need very complex state management. I just use ContextAPI in this project for multiple theming and to avoid prop drilling.</p>\n<p>Here’s a quick recap for the tech stack.</p>\n<ul>\n<li>Frontend: <a href=\"https://reactjs.org/\" title=\"React Website\">ReactJS</a>, <a href=\"https://www.typescriptlang.org/\" title=\"TypeScript Website\">TypeScript</a></li>\n<li>Styling: <a href=\"https://styled-components.com/\" title=\"Styled-Components Website\">Styled-Components</a></li>\n<li>UI/UX: <a href=\"https://figma.com/\" title=\"Figma Website\">Figma</a></li>\n<li>State Management: <a href=\"https://reactjs.org/docs/context.html\" title=\"React ContextAPI\">ContextAPI</a></li>\n<li>Deployment: <a href=\"https://www.netlify.com/\" title=\"Netlify Website\">Netlify</a></li>\n</ul>\n<h2 id=\"features\">Features</h2>\n<p>Here are some features of the project.</p>\n<h3 id=\"multiple-themes\">Multiple Themes</h3>\n<p>Users can change multiple themes. At the time of writing this post, there are 5 themes; and more themes will probably be added in the future. The selected theme is saved in local storage so that the theme won’t change on page refresh.</p>\n<p><img src=\"https://i.ibb.co/fSTCnWB/terminal-portfolio-multiple-themes.gif\" alt=\"Setting different theme\"></p>\n<h3 id=\"command-line-completion\">Command-line Completion</h3>\n<p>To look and feel as close to the actual terminal as possible, I put a command-line completion feature which auto fills in partially typed commands by simply pressing ‘Tab’ or ‘Ctrl + i’.</p>\n<p><img src=\"https://i.ibb.co/CQTGGLF/terminal-autocomplete.gif\" alt=\"Demonstrating command-line completion\"></p>\n<h3 id=\"previous-commands\">Previous Commands</h3>\n<p>Users can go back to the previous commands or navigate the previously typed commands by pressing Up &#x26; Down Arrows.</p>\n<p><img src=\"https://i.ibb.co/vD1pSRv/terminal-up-down.gif\" alt=\"Going back to previous commands with UP Arrow\"></p>\n<h3 id=\"viewclear-command-history\">View/Clear Command History</h3>\n<p>previously typed commands can be viewed by typing ‘history’ in the command line. All the command history and terminal screen can be wiped out by typing ‘clear’ or pressing ‘Ctrl + l’.</p>\n<p><img src=\"https://i.ibb.co/SJBy8Rr/terminal-clear.gif\" alt=\"Clearing the terminal with &#x27;clear&#x27; or &#x27;Ctrl + L&#x27; command\"></p>\n<h2 id=\"outro\">Outro</h2>\n<p>This is a really fun project, and one special part of this project is I had to focus on logic rather than user-interface (even though this is kind of a frontend project).</p>\n<h2 id=\"project-links\">Project Links</h2>\n<ul>\n<li>Website: <a href=\"https://terminal.satnaing.dev/\" title=\"https://terminal.satnaing.dev/\">https://terminal.satnaing.dev/</a></li>\n<li>Repo: <a href=\"https://github.com/satnaing/terminal-portfolio\" title=\"https://github.com/satnaing/terminal-portfolio\">https://github.com/satnaing/terminal-portfolio</a></li>\n</ul>",{headings:230,localImagePaths:253,remoteImagePaths:254,frontmatter:255,imagePaths:258},[231,234,237,238,239,242,245,248,251,252],{depth:32,slug:232,text:233},"table-of-contents","Table of contents",{depth:32,slug:235,text:236},"intro","Intro",{depth:32,slug:175,text:176},{depth:32,slug:178,text:179},{depth:36,slug:240,text:241},"multiple-themes","Multiple Themes",{depth:36,slug:243,text:244},"command-line-completion","Command-line Completion",{depth:36,slug:246,text:247},"previous-commands","Previous Commands",{depth:36,slug:249,text:250},"viewclear-command-history","View/Clear Command History",{depth:32,slug:202,text:203},{depth:32,slug:205,text:206},[],[],{title:217,author:73,pubDatetime:256,slug:213,featured:76,draft:77,tags:257,description:223,timezone:165},["Date","2022-06-09T03:42:51.000Z"],[219,220,221,222,79],[],"data-careers-in-2025",{id:259,data:261,body:272,filePath:273,digest:274,rendered:275},{author:14,pubDatetime:262,modDatetime:263,title:264,tags:265,description:271},["Date","2025-07-31T01:00:00.737Z"],["Date","2025-08-02T14:00:00.000Z"],"How to Start Your Data Career in 2025 | A Complete Beginner's Guide",[266,19,267,268,269,270],"data career","data science","learning path","beginners","data skills","A comprehensive guide to starting your career in data industry.","# Introduction \r\n\r\n## Part one : The current market\r\n\r\nThe data industry is still growing, with companies across all sectors looking for (skilled) professionals to help them with their data. Skilled because the current market is not beginner-friendly unfortunately.\r\n\r\nWith the recents trend in Data, Big Data in 2017 and now AI, more than before, young people are looking for opportunities.\r\n\r\nThe most incredible market happened just after COVID, but now it's on a long downtrend and there is no sign of reversal as you can see on the graph below :\r\n\r\n![FRED job postings for software development](/assets/images/blog/data-careers-in-2025-jobs-postings.png)\r\n\r\nThe depression part is after us, let's focus on the brighter side : software engineering is not data engineering ; USA is not the only country on earth.\r\n\r\n## Part two : The mindset of a junior vs a senior\r\n\r\nAs the title says, being a senior or confirmed developer (at least 3 years experience) is way more easier than a beginner. So as a recent graduate, or currently intern, looking for jobs, or apprenticeship you should focus on what really matters for the companies : solving business problems.\r\n\r\nDiplomas, grade, university, certifications, those as \"theoritical knowledge\", I'm taking the risk of being too extreme but the most problematic things with juniors is there lack of ability to understand the problem the companies are facing.\r\n\r\nUniversity people are here to teach you technology, mindset, attitude. Grade are here to validate your skills, same for diplomas and certifications, but if you know perfectly a tool, the definition, the way it works and how to use it, it doesn't matter if you cannot use it for the purpose of the companies' problem(s).\r\n\r\n\"I know how to code a binary tree using Python\" -> Congratulations, but the company wants you to solve this bug into this system that has been maintained for 20 years in order to fill one column in a database that is the current backbone of the entire dashboard for the HR department.\r\n\r\nTechnical case =/= business use case.\r\n\r\nIt took me many years to understand this, because most of my colleagues didn't want me to know this, so I could stay in my developer position and not climbing the ladder to a more \"consulting\" or \"managing\" role that they were enrolled for.\r\n\r\nSo as a junior, embrace the business problematic. Use your time to understand, not just how, but why this problem needs to be solved. AI can help you figure out the technical details, but AI doesn't know the context of the business and the client that you have to satisfy.\r\n\r\n# Which direction to choose\r\n\r\nWhere do you start? So many buzzwords are right now used, data science, data engineering, analytics engineer, context engineer, machine learning, ai trainer etc... \r\nAs simple as everything should be, there is 3 big \"categories\" inside Data, which is already a sub-family of software engineering, itself a subfamily of the big IT/digital family.\r\n\r\n## The Three Main Data Career Paths\r\n\r\n### 1. **Data Engineering**\r\n**What they do**: Build and maintain data infrastructure, pipelines, and systems.\r\n**Pros**: most resilient, technical, most practical\r\n\r\n**Cons**: lots of \"fixing stuff\", at the end of the chain so always problems solver, very flexible job\r\n\r\n- **Focus**: Data infrastructure, ETL/ELT processes, data warehousing\r\n- **Skills**: SQL, Python, cloud platforms, data modeling\r\n- **Typical roles**: Data Engineer, ETL Developer, Data Platform Engineer\r\n\r\n### 3. **Data Analytics**\r\n**What they do**: Transform data into actionable business insights and reports.\r\n\r\n**Pros**: high level, last person before submitting important dashboards, less technical\r\n\r\n**Cons**: less technical so might be replaced by AI, not resilient if too high level (you need to be technical)\r\n- **Focus**: Business intelligence, reporting, dashboard creation\r\n- **Skills**: SQL, Excel, BI tools, data visualization\r\n- **Typical roles**: Data Analyst, Business Analyst, BI Developer\r\n\r\n### 2. **Data Science**\r\n**What they do**: Analyze data to extract insights and build predictive models.\r\n**Pros**: data rockstar, latest technologies, high end programming\r\n**Cons**: lots of math, data cleaning will take all your time\r\n- **Focus**: Statistical analysis, machine learning, business insights\r\n- **Skills**: Python/R, statistics, machine learning, data visualization\r\n- **Typical roles**: Data Scientist, ML Engineer, Analytics Engineer\r\n\r\nConclusion : \r\n- A data analyst can be replaced by a data engineer, data scientist\r\n- A data engineer can be replaced by a data scientist\r\n- A data scientist can be doing everything except data science\r\n\r\n\r\n# Which Path Should You Choose?\r\n\r\n| Factor | Data Engineering | Data Science | Data Analytics |\r\n|--------|------------------|--------------|----------------|\r\n| **Coding Required** | High | High | Medium |\r\n| **Math/Statistics** | Low | High | Medium |\r\n| **Business Focus** | Medium | Medium | High |\r\n| **Entry Level** | Medium | Hard | Easy |\r\n\r\n## Essential Skills for Data Careers\r\n\r\n### Core Technical Skills\r\n\r\n#### 1. SQL (Structured Query Language)\r\n\r\n**Why it's essential**: SQL is the universal language for data manipulation and analysis.\r\n- **Start with**: Basic SELECT, WHERE, JOIN operations\r\n- **Advanced topics**: Window functions, CTEs, performance optimization\r\n- **Practice platforms**: LeetCode, HackerRank, Mode Analytics\r\n\r\n```sql\r\n-- Basic SQL example\r\nSELECT \r\n    customer_id,\r\n    COUNT(*) as order_count,\r\n    SUM(amount) as total_spent\r\nFROM orders \r\nWHERE order_date >= '2024-01-01'\r\nGROUP BY customer_id\r\nHAVING total_spent > 1000\r\nORDER BY total_spent DESC;\r\n```\r\n\r\n#### 2. Python Programming\r\n**Why it's essential**: Python is the most popular language for data work.\r\n- **Core libraries**: Pandas, NumPy, Matplotlib, Seaborn\r\n- **Data science libraries**: Scikit-learn, TensorFlow, PyTorch\r\n- **Data engineering**: Apache Airflow, PySpark, FastAPI\r\n\r\n#### 3. Data Visualization\r\n**Why it's essential**: Communicating insights effectively is crucial.\r\n- **Tools**: Tableau, Power BI, Plotly, D3.js\r\n- **Principles**: Color theory, chart selection, storytelling\r\n- **Best practices**: Keep it simple, focus on insights, consider accessibility\r\n\r\n### Analytical Skills\r\n\r\n#### Critical Thinking\r\n\r\n- **Problem decomposition**: Breaking complex problems into manageable parts\r\n- **Hypothesis testing**: Formulating and testing data-driven hypotheses\r\n- **Root cause analysis**: Identifying underlying issues in data problems\r\n\r\n#### Business Acumen\r\n- **Domain knowledge**: Understanding your industry's specific needs\r\n- **Stakeholder communication**: Translating technical findings for business audiences\r\n- **ROI thinking**: Connecting data insights to business value\r\n\r\n### Data Fundamentals\r\n\r\n#### Data Types and Structures\r\n\r\n- **Structured data**: Databases, CSV files, JSON\r\n- **Unstructured data**: Text, images, videos\r\n- **Semi-structured data**: XML, log files\r\n\r\n#### Data Quality Concepts\r\n\r\n- **Accuracy**: Data reflects reality\r\n- **Completeness**: No missing values\r\n- **Consistency**: Data follows expected patterns\r\n- **Timeliness**: Data is current and relevant\r\n\r\n## Building Your Portfolio\r\n\r\n### Portfolio Components\r\n\r\n#### 1. GitHub Repository\r\n\r\n- **Well-documented projects** with README files\r\n- **Clean, production-ready code**\r\n- **Diverse project types** showing different skills\r\n- **Active contributions** to open-source projects\r\n\r\n#### 2. Personal Projects\r\n\r\n- **End-to-end solutions** from data collection to insights\r\n- **Real-world datasets** (Kaggle, government data, APIs)\r\n- **Business impact** demonstrated through metrics\r\n- **Technical complexity** appropriate for your level\r\n\r\n#### 3. Blog or Technical Writing\r\n\r\n- **Share your learning journey**\r\n- **Write tutorials and guides**\r\n- **Analyze interesting datasets**\r\n- **Contribute to data communities**\r\n\r\n## Job Search Strategy\r\n\r\n### Where to Look\r\n\r\n#### Job Boards\r\n\r\n- **General**: LinkedIn, Indeed, Glassdoor\r\n- **Tech-focused**: Stack Overflow Jobs, AngelList\r\n- **Data-specific**: DataJobs, Analytics Vidhya Jobs\r\n\r\n#### Company Career Pages\r\n\r\n- **Tech companies**: Google, Amazon, Microsoft, Meta\r\n- **Consulting firms**: McKinsey, BCG, Deloitte\r\n- **Startups**: Look for companies with data teams\r\n\r\n#### Networking\r\n\r\n- **LinkedIn connections** with data professionals\r\n- **Alumni networks** from your university\r\n- **Professional associations** and meetups\r\n\r\n### Interview Preparation\r\n\r\n#### Technical Interviews\r\n\r\n- **Practice coding problems** on LeetCode and HackerRank\r\n- **Review SQL queries** and data manipulation\r\n- **Prepare for system design** questions (for senior roles)\r\n- **Practice explaining** technical concepts clearly\r\n\r\n#### Behavioral Interviews\r\n\r\n- **STAR method** for answering questions\r\n- **Prepare stories** about your projects and challenges\r\n- **Research the company** and their data initiatives\r\n- **Prepare questions** to ask the interviewer\r\n\r\n## Common Mistakes to Avoid\r\n\r\n### Learning Mistakes\r\n\r\n- **Trying to learn everything at once**: Focus on fundamentals first\r\n- **Only watching tutorials**: Practice with real projects\r\n- **Ignoring business context**: Understand why you're doing what you're doing\r\n- **Not building a portfolio**: Projects are your best resume\r\n\r\n### Job Search Mistakes\r\n\r\n- **Applying to too many jobs**: Quality over quantity\r\n- **Generic applications**: Tailor each application\r\n- **Not networking**: Relationships matter in data\r\n- **Ignoring company culture**: Fit is as important as skills\r\n\r\n### Career Mistakes\r\n\r\n- **Staying in your comfort zone**: Keep learning and growing\r\n- **Not staying current**: Data technology evolves quickly\r\n- **Ignoring soft skills**: Communication is crucial\r\n- **Not building a personal brand**: Stand out in the crowd\r\n\r\n## Conclusion\r\n\r\nStarting a career in data is both challenging and rewarding. The field offers excellent opportunities for growth, competitive salaries, and the chance to work on meaningful problems that impact businesses and society.\r\n\r\nRemember that everyone's journey is different. Focus on building a strong foundation, creating a compelling portfolio, and continuously learning. The data industry values practical skills and real-world experience, so prioritize hands-on projects over theoretical knowledge.\r\n\r\n### Next Steps\r\n\r\n1. **Choose your path**: Data Engineering, Data Science, or Analytics\r\n2. **Build your foundation**: Master SQL, Python, and basic statistics\r\n3. **Create projects**: Build a portfolio that showcases your skills\r\n4. **Network actively**: Connect with professionals in the field\r\n5. **Apply strategically**: Target roles that match your skills and interests\r\n6. **Keep learning**: The data field evolves rapidly\r\n\r\n### Pro Tips\r\n\r\n- **Start small**: Don't try to learn everything at once\r\n- **Be patient**: Building expertise takes time\r\n- **Practice regularly**: Consistency is key to skill development\r\n- **Share your work**: Teaching others reinforces your learning\r\n- **Stay curious**: The best data professionals are always learning\r\n\r\nThe data industry is waiting for passionate, skilled professionals like you. With dedication, practice, and the right approach, you can build a successful and fulfilling career in data.\r\n\r\n---\r\n\r\n*Thanks for reading this article. Still lost ? Or questioning yourself ? Fill up [the form](https://jeoste.github.io/contact) and I'll personaly answer you.*","src/data/blog/data-careers-in-2025.md","6c6befeebb316cda",{html:276,metadata:277},"<h1 id=\"introduction\">Introduction</h1>\n<h2 id=\"part-one--the-current-market\">Part one : The current market</h2>\n<p>The data industry is still growing, with companies across all sectors looking for (skilled) professionals to help them with their data. Skilled because the current market is not beginner-friendly unfortunately.</p>\n<p>With the recents trend in Data, Big Data in 2017 and now AI, more than before, young people are looking for opportunities.</p>\n<p>The most incredible market happened just after COVID, but now it’s on a long downtrend and there is no sign of reversal as you can see on the graph below :</p>\n<p><img src=\"/assets/images/blog/data-careers-in-2025-jobs-postings.png\" alt=\"FRED job postings for software development\"></p>\n<p>The depression part is after us, let’s focus on the brighter side : software engineering is not data engineering ; USA is not the only country on earth.</p>\n<h2 id=\"part-two--the-mindset-of-a-junior-vs-a-senior\">Part two : The mindset of a junior vs a senior</h2>\n<p>As the title says, being a senior or confirmed developer (at least 3 years experience) is way more easier than a beginner. So as a recent graduate, or currently intern, looking for jobs, or apprenticeship you should focus on what really matters for the companies : solving business problems.</p>\n<p>Diplomas, grade, university, certifications, those as “theoritical knowledge”, I’m taking the risk of being too extreme but the most problematic things with juniors is there lack of ability to understand the problem the companies are facing.</p>\n<p>University people are here to teach you technology, mindset, attitude. Grade are here to validate your skills, same for diplomas and certifications, but if you know perfectly a tool, the definition, the way it works and how to use it, it doesn’t matter if you cannot use it for the purpose of the companies’ problem(s).</p>\n<p>“I know how to code a binary tree using Python” -> Congratulations, but the company wants you to solve this bug into this system that has been maintained for 20 years in order to fill one column in a database that is the current backbone of the entire dashboard for the HR department.</p>\n<p>Technical case =/= business use case.</p>\n<p>It took me many years to understand this, because most of my colleagues didn’t want me to know this, so I could stay in my developer position and not climbing the ladder to a more “consulting” or “managing” role that they were enrolled for.</p>\n<p>So as a junior, embrace the business problematic. Use your time to understand, not just how, but why this problem needs to be solved. AI can help you figure out the technical details, but AI doesn’t know the context of the business and the client that you have to satisfy.</p>\n<h1 id=\"which-direction-to-choose\">Which direction to choose</h1>\n<p>Where do you start? So many buzzwords are right now used, data science, data engineering, analytics engineer, context engineer, machine learning, ai trainer etc…\r\nAs simple as everything should be, there is 3 big “categories” inside Data, which is already a sub-family of software engineering, itself a subfamily of the big IT/digital family.</p>\n<h2 id=\"the-three-main-data-career-paths\">The Three Main Data Career Paths</h2>\n<h3 id=\"1-data-engineering\">1. <strong>Data Engineering</strong></h3>\n<p><strong>What they do</strong>: Build and maintain data infrastructure, pipelines, and systems.\r\n<strong>Pros</strong>: most resilient, technical, most practical</p>\n<p><strong>Cons</strong>: lots of “fixing stuff”, at the end of the chain so always problems solver, very flexible job</p>\n<ul>\n<li><strong>Focus</strong>: Data infrastructure, ETL/ELT processes, data warehousing</li>\n<li><strong>Skills</strong>: SQL, Python, cloud platforms, data modeling</li>\n<li><strong>Typical roles</strong>: Data Engineer, ETL Developer, Data Platform Engineer</li>\n</ul>\n<h3 id=\"3-data-analytics\">3. <strong>Data Analytics</strong></h3>\n<p><strong>What they do</strong>: Transform data into actionable business insights and reports.</p>\n<p><strong>Pros</strong>: high level, last person before submitting important dashboards, less technical</p>\n<p><strong>Cons</strong>: less technical so might be replaced by AI, not resilient if too high level (you need to be technical)</p>\n<ul>\n<li><strong>Focus</strong>: Business intelligence, reporting, dashboard creation</li>\n<li><strong>Skills</strong>: SQL, Excel, BI tools, data visualization</li>\n<li><strong>Typical roles</strong>: Data Analyst, Business Analyst, BI Developer</li>\n</ul>\n<h3 id=\"2-data-science\">2. <strong>Data Science</strong></h3>\n<p><strong>What they do</strong>: Analyze data to extract insights and build predictive models.\r\n<strong>Pros</strong>: data rockstar, latest technologies, high end programming\r\n<strong>Cons</strong>: lots of math, data cleaning will take all your time</p>\n<ul>\n<li><strong>Focus</strong>: Statistical analysis, machine learning, business insights</li>\n<li><strong>Skills</strong>: Python/R, statistics, machine learning, data visualization</li>\n<li><strong>Typical roles</strong>: Data Scientist, ML Engineer, Analytics Engineer</li>\n</ul>\n<p>Conclusion :</p>\n<ul>\n<li>A data analyst can be replaced by a data engineer, data scientist</li>\n<li>A data engineer can be replaced by a data scientist</li>\n<li>A data scientist can be doing everything except data science</li>\n</ul>\n<h1 id=\"which-path-should-you-choose\">Which Path Should You Choose?</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Factor</th><th>Data Engineering</th><th>Data Science</th><th>Data Analytics</th></tr></thead><tbody><tr><td><strong>Coding Required</strong></td><td>High</td><td>High</td><td>Medium</td></tr><tr><td><strong>Math/Statistics</strong></td><td>Low</td><td>High</td><td>Medium</td></tr><tr><td><strong>Business Focus</strong></td><td>Medium</td><td>Medium</td><td>High</td></tr><tr><td><strong>Entry Level</strong></td><td>Medium</td><td>Hard</td><td>Easy</td></tr></tbody></table>\n<h2 id=\"essential-skills-for-data-careers\">Essential Skills for Data Careers</h2>\n<h3 id=\"core-technical-skills\">Core Technical Skills</h3>\n<h4 id=\"1-sql-structured-query-language\">1. SQL (Structured Query Language)</h4>\n<p><strong>Why it’s essential</strong>: SQL is the universal language for data manipulation and analysis.</p>\n<ul>\n<li><strong>Start with</strong>: Basic SELECT, WHERE, JOIN operations</li>\n<li><strong>Advanced topics</strong>: Window functions, CTEs, performance optimization</li>\n<li><strong>Practice platforms</strong>: LeetCode, HackerRank, Mode Analytics</li>\n</ul>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\"><code><span class=\"line\"><span style=\"color:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#637777;--shiki-dark-font-style:italic\">-- Basic SQL example</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">SELECT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> </span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    customer_id,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#C5E478\">    COUNT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">(</span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">*</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">) </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">as</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> order_count,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#C5E478\">    SUM</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">(amount) </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">as</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> total_spent</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">FROM</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> orders </span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">WHERE</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> order_date </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">>=</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> '</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">2024-01-01</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">GROUP BY</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> customer_id</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">HAVING</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> total_spent </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">></span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 1000</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">ORDER BY</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> total_spent </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">DESC</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">;</span></span></code></pre>\n<h4 id=\"2-python-programming\">2. Python Programming</h4>\n<p><strong>Why it’s essential</strong>: Python is the most popular language for data work.</p>\n<ul>\n<li><strong>Core libraries</strong>: Pandas, NumPy, Matplotlib, Seaborn</li>\n<li><strong>Data science libraries</strong>: Scikit-learn, TensorFlow, PyTorch</li>\n<li><strong>Data engineering</strong>: Apache Airflow, PySpark, FastAPI</li>\n</ul>\n<h4 id=\"3-data-visualization\">3. Data Visualization</h4>\n<p><strong>Why it’s essential</strong>: Communicating insights effectively is crucial.</p>\n<ul>\n<li><strong>Tools</strong>: Tableau, Power BI, Plotly, D3.js</li>\n<li><strong>Principles</strong>: Color theory, chart selection, storytelling</li>\n<li><strong>Best practices</strong>: Keep it simple, focus on insights, consider accessibility</li>\n</ul>\n<h3 id=\"analytical-skills\">Analytical Skills</h3>\n<h4 id=\"critical-thinking\">Critical Thinking</h4>\n<ul>\n<li><strong>Problem decomposition</strong>: Breaking complex problems into manageable parts</li>\n<li><strong>Hypothesis testing</strong>: Formulating and testing data-driven hypotheses</li>\n<li><strong>Root cause analysis</strong>: Identifying underlying issues in data problems</li>\n</ul>\n<h4 id=\"business-acumen\">Business Acumen</h4>\n<ul>\n<li><strong>Domain knowledge</strong>: Understanding your industry’s specific needs</li>\n<li><strong>Stakeholder communication</strong>: Translating technical findings for business audiences</li>\n<li><strong>ROI thinking</strong>: Connecting data insights to business value</li>\n</ul>\n<h3 id=\"data-fundamentals\">Data Fundamentals</h3>\n<h4 id=\"data-types-and-structures\">Data Types and Structures</h4>\n<ul>\n<li><strong>Structured data</strong>: Databases, CSV files, JSON</li>\n<li><strong>Unstructured data</strong>: Text, images, videos</li>\n<li><strong>Semi-structured data</strong>: XML, log files</li>\n</ul>\n<h4 id=\"data-quality-concepts\">Data Quality Concepts</h4>\n<ul>\n<li><strong>Accuracy</strong>: Data reflects reality</li>\n<li><strong>Completeness</strong>: No missing values</li>\n<li><strong>Consistency</strong>: Data follows expected patterns</li>\n<li><strong>Timeliness</strong>: Data is current and relevant</li>\n</ul>\n<h2 id=\"building-your-portfolio\">Building Your Portfolio</h2>\n<h3 id=\"portfolio-components\">Portfolio Components</h3>\n<h4 id=\"1-github-repository\">1. GitHub Repository</h4>\n<ul>\n<li><strong>Well-documented projects</strong> with README files</li>\n<li><strong>Clean, production-ready code</strong></li>\n<li><strong>Diverse project types</strong> showing different skills</li>\n<li><strong>Active contributions</strong> to open-source projects</li>\n</ul>\n<h4 id=\"2-personal-projects\">2. Personal Projects</h4>\n<ul>\n<li><strong>End-to-end solutions</strong> from data collection to insights</li>\n<li><strong>Real-world datasets</strong> (Kaggle, government data, APIs)</li>\n<li><strong>Business impact</strong> demonstrated through metrics</li>\n<li><strong>Technical complexity</strong> appropriate for your level</li>\n</ul>\n<h4 id=\"3-blog-or-technical-writing\">3. Blog or Technical Writing</h4>\n<ul>\n<li><strong>Share your learning journey</strong></li>\n<li><strong>Write tutorials and guides</strong></li>\n<li><strong>Analyze interesting datasets</strong></li>\n<li><strong>Contribute to data communities</strong></li>\n</ul>\n<h2 id=\"job-search-strategy\">Job Search Strategy</h2>\n<h3 id=\"where-to-look\">Where to Look</h3>\n<h4 id=\"job-boards\">Job Boards</h4>\n<ul>\n<li><strong>General</strong>: LinkedIn, Indeed, Glassdoor</li>\n<li><strong>Tech-focused</strong>: Stack Overflow Jobs, AngelList</li>\n<li><strong>Data-specific</strong>: DataJobs, Analytics Vidhya Jobs</li>\n</ul>\n<h4 id=\"company-career-pages\">Company Career Pages</h4>\n<ul>\n<li><strong>Tech companies</strong>: Google, Amazon, Microsoft, Meta</li>\n<li><strong>Consulting firms</strong>: McKinsey, BCG, Deloitte</li>\n<li><strong>Startups</strong>: Look for companies with data teams</li>\n</ul>\n<h4 id=\"networking\">Networking</h4>\n<ul>\n<li><strong>LinkedIn connections</strong> with data professionals</li>\n<li><strong>Alumni networks</strong> from your university</li>\n<li><strong>Professional associations</strong> and meetups</li>\n</ul>\n<h3 id=\"interview-preparation\">Interview Preparation</h3>\n<h4 id=\"technical-interviews\">Technical Interviews</h4>\n<ul>\n<li><strong>Practice coding problems</strong> on LeetCode and HackerRank</li>\n<li><strong>Review SQL queries</strong> and data manipulation</li>\n<li><strong>Prepare for system design</strong> questions (for senior roles)</li>\n<li><strong>Practice explaining</strong> technical concepts clearly</li>\n</ul>\n<h4 id=\"behavioral-interviews\">Behavioral Interviews</h4>\n<ul>\n<li><strong>STAR method</strong> for answering questions</li>\n<li><strong>Prepare stories</strong> about your projects and challenges</li>\n<li><strong>Research the company</strong> and their data initiatives</li>\n<li><strong>Prepare questions</strong> to ask the interviewer</li>\n</ul>\n<h2 id=\"common-mistakes-to-avoid\">Common Mistakes to Avoid</h2>\n<h3 id=\"learning-mistakes\">Learning Mistakes</h3>\n<ul>\n<li><strong>Trying to learn everything at once</strong>: Focus on fundamentals first</li>\n<li><strong>Only watching tutorials</strong>: Practice with real projects</li>\n<li><strong>Ignoring business context</strong>: Understand why you’re doing what you’re doing</li>\n<li><strong>Not building a portfolio</strong>: Projects are your best resume</li>\n</ul>\n<h3 id=\"job-search-mistakes\">Job Search Mistakes</h3>\n<ul>\n<li><strong>Applying to too many jobs</strong>: Quality over quantity</li>\n<li><strong>Generic applications</strong>: Tailor each application</li>\n<li><strong>Not networking</strong>: Relationships matter in data</li>\n<li><strong>Ignoring company culture</strong>: Fit is as important as skills</li>\n</ul>\n<h3 id=\"career-mistakes\">Career Mistakes</h3>\n<ul>\n<li><strong>Staying in your comfort zone</strong>: Keep learning and growing</li>\n<li><strong>Not staying current</strong>: Data technology evolves quickly</li>\n<li><strong>Ignoring soft skills</strong>: Communication is crucial</li>\n<li><strong>Not building a personal brand</strong>: Stand out in the crowd</li>\n</ul>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Starting a career in data is both challenging and rewarding. The field offers excellent opportunities for growth, competitive salaries, and the chance to work on meaningful problems that impact businesses and society.</p>\n<p>Remember that everyone’s journey is different. Focus on building a strong foundation, creating a compelling portfolio, and continuously learning. The data industry values practical skills and real-world experience, so prioritize hands-on projects over theoretical knowledge.</p>\n<h3 id=\"next-steps\">Next Steps</h3>\n<ol>\n<li><strong>Choose your path</strong>: Data Engineering, Data Science, or Analytics</li>\n<li><strong>Build your foundation</strong>: Master SQL, Python, and basic statistics</li>\n<li><strong>Create projects</strong>: Build a portfolio that showcases your skills</li>\n<li><strong>Network actively</strong>: Connect with professionals in the field</li>\n<li><strong>Apply strategically</strong>: Target roles that match your skills and interests</li>\n<li><strong>Keep learning</strong>: The data field evolves rapidly</li>\n</ol>\n<h3 id=\"pro-tips\">Pro Tips</h3>\n<ul>\n<li><strong>Start small</strong>: Don’t try to learn everything at once</li>\n<li><strong>Be patient</strong>: Building expertise takes time</li>\n<li><strong>Practice regularly</strong>: Consistency is key to skill development</li>\n<li><strong>Share your work</strong>: Teaching others reinforces your learning</li>\n<li><strong>Stay curious</strong>: The best data professionals are always learning</li>\n</ul>\n<p>The data industry is waiting for passionate, skilled professionals like you. With dedication, practice, and the right approach, you can build a successful and fulfilling career in data.</p>\n<hr>\n<p><em>Thanks for reading this article. Still lost ? Or questioning yourself ? Fill up <a href=\"https://jeoste.github.io/contact\">the form</a> and I’ll personaly answer you.</em></p>",{headings:278,localImagePaths:396,remoteImagePaths:397,frontmatter:398,imagePaths:402},[279,280,283,286,289,292,295,298,301,304,307,310,314,317,320,323,326,329,332,335,338,341,344,347,350,353,356,359,362,365,368,371,374,377,380,383,386,389,390,393],{depth:120,slug:117,text:118},{depth:32,slug:281,text:282},"part-one--the-current-market","Part one : The current market",{depth:32,slug:284,text:285},"part-two--the-mindset-of-a-junior-vs-a-senior","Part two : The mindset of a junior vs a senior",{depth:120,slug:287,text:288},"which-direction-to-choose","Which direction to choose",{depth:32,slug:290,text:291},"the-three-main-data-career-paths","The Three Main Data Career Paths",{depth:36,slug:293,text:294},"1-data-engineering","1. Data Engineering",{depth:36,slug:296,text:297},"3-data-analytics","3. Data Analytics",{depth:36,slug:299,text:300},"2-data-science","2. Data Science",{depth:120,slug:302,text:303},"which-path-should-you-choose","Which Path Should You Choose?",{depth:32,slug:305,text:306},"essential-skills-for-data-careers","Essential Skills for Data Careers",{depth:36,slug:308,text:309},"core-technical-skills","Core Technical Skills",{depth:311,slug:312,text:313},4,"1-sql-structured-query-language","1. SQL (Structured Query Language)",{depth:311,slug:315,text:316},"2-python-programming","2. Python Programming",{depth:311,slug:318,text:319},"3-data-visualization","3. Data Visualization",{depth:36,slug:321,text:322},"analytical-skills","Analytical Skills",{depth:311,slug:324,text:325},"critical-thinking","Critical Thinking",{depth:311,slug:327,text:328},"business-acumen","Business Acumen",{depth:36,slug:330,text:331},"data-fundamentals","Data Fundamentals",{depth:311,slug:333,text:334},"data-types-and-structures","Data Types and Structures",{depth:311,slug:336,text:337},"data-quality-concepts","Data Quality Concepts",{depth:32,slug:339,text:340},"building-your-portfolio","Building Your Portfolio",{depth:36,slug:342,text:343},"portfolio-components","Portfolio Components",{depth:311,slug:345,text:346},"1-github-repository","1. GitHub Repository",{depth:311,slug:348,text:349},"2-personal-projects","2. Personal Projects",{depth:311,slug:351,text:352},"3-blog-or-technical-writing","3. Blog or Technical Writing",{depth:32,slug:354,text:355},"job-search-strategy","Job Search Strategy",{depth:36,slug:357,text:358},"where-to-look","Where to Look",{depth:311,slug:360,text:361},"job-boards","Job Boards",{depth:311,slug:363,text:364},"company-career-pages","Company Career Pages",{depth:311,slug:366,text:367},"networking","Networking",{depth:36,slug:369,text:370},"interview-preparation","Interview Preparation",{depth:311,slug:372,text:373},"technical-interviews","Technical Interviews",{depth:311,slug:375,text:376},"behavioral-interviews","Behavioral Interviews",{depth:32,slug:378,text:379},"common-mistakes-to-avoid","Common Mistakes to Avoid",{depth:36,slug:381,text:382},"learning-mistakes","Learning Mistakes",{depth:36,slug:384,text:385},"job-search-mistakes","Job Search Mistakes",{depth:36,slug:387,text:388},"career-mistakes","Career Mistakes",{depth:32,slug:145,text:146},{depth:36,slug:391,text:392},"next-steps","Next Steps",{depth:36,slug:394,text:395},"pro-tips","Pro Tips",[],[],{author:14,pubDatetime:399,modDatetime:400,title:264,tags:401,description:271},["Date","2025-07-31T01:00:00.737Z"],["Date","2025-08-02T14:00:00.000Z"],[266,19,267,268,269,270],[],"data-observability",{id:403,data:405,body:417,filePath:418,digest:419,rendered:420},{author:14,pubDatetime:406,modDatetime:407,title:408,tags:409,description:416},["Date","2025-07-28T01:08:52.777Z"],["Date","2025-08-02T10:57:52.777Z"],"Data Observability | Why so necessary",[19,410,411,412,413,414,415],"data observability","monitoring","logs","traces","metrics","data health","Understanding why a data observability platform is the new tool that enhance your information system","> In today's data-driven world, organizations needs to be digital, but struggle to keep a 100% functional and available data accross their systems. Data observability emerges as the optimum solution to be aware of the current situation of the information system.\r\n\r\n# Data Observability: The New Gold Rush\r\n\r\nIn the digital age, data has become the lifeblood of modern organizations. Every click, transaction, and interaction generates data points that flow through complex pipelines, databases, and analytics systems. But what happens when this data becomes unreliable, incomplete, or simply wrong? The consequences can be catastrophic—from missed business opportunities to regulatory compliance failures.\r\n\r\nThis is where **data observability** comes into play—a comprehensive approach to monitoring, tracking, and troubleshooting data across your entire data ecosystem.\r\n\r\n# What is Data Observability?\r\n\r\nData observability is the ability to understand the health and state of data in your systems through continuous monitoring and alerting. It's about having complete visibility into your data pipeline—from ingestion to consumption—ensuring that data is accurate, complete, and timely.\r\n\r\nThink of it as having a **\"data health monitoring system\"** that continuously checks the pulse of your data infrastructure, much like a doctor monitors vital signs.\r\n\r\n## The Five Pillars of Data Observability\r\n\r\nData observability rests on five fundamental pillars that work together to provide comprehensive visibility:\r\n\r\n### Freshness\r\n\r\n- **Timeliness**: Is your data up-to-date?\r\n- **Latency**: How long does it take for data to be available?\r\n- **SLA Monitoring**: Are you meeting your data delivery commitments?\r\n\r\n### Quality\r\n\r\n- **Accuracy**: Is your data correct and trustworthy?\r\n- **Completeness**: Are all required fields populated?\r\n- **Consistency**: Are values consistent across different sources?\r\n\r\n### Volume\r\n\r\n- **Data Volume**: Are you receiving the expected amount of data?\r\n- **Growth Patterns**: Is data volume growing as expected?\r\n- **Anomaly Detection**: Are there unexpected spikes or drops?\r\n\r\n### Schema\r\n\r\n- **Structure Changes**: Has the structure of your data changed unexpectedly?\r\n- **Field Validation**: Are all fields present and properly typed?\r\n- **Version Control**: Are schema changes tracked and documented?\r\n\r\n### Lineage\r\n\r\n- **Source to Destination**: Where did this data come from?\r\n- **Transformation History**: What changes were made along the way?\r\n- **Impact Analysis**: What downstream systems depend on this data?\r\n\r\n\r\n\r\n# Why Data Observability Matters\r\n\r\n## The Hidden Cost of Bad Data\r\n\r\nPoor data quality costs organizations an estimated **$12.9 million annually** on average. This includes:\r\n\r\n- **Operational inefficiencies** from working with incorrect data\r\n- **Missed revenue opportunities** due to poor decision-making\r\n- **Compliance risks** and potential regulatory fines\r\n- **Customer trust erosion** from data-driven mistakes\r\n\r\n## Real-World Scenarios\r\n\r\nConsider these common scenarios where data observability becomes critical:\r\n\r\n**Scenario 1: E-commerce Platform**\r\n\r\n- A data pipeline failure goes unnoticed for 24 hours\r\n- Marketing campaigns are launched with outdated customer data\r\n- Result: 40% drop in conversion rates, $50,000 in lost revenue\r\n\r\n**Scenario 2: Financial Services**\r\n\r\n- A schema change in transaction data breaks reporting\r\n- Compliance reports are generated with incomplete data\r\n- Result: Regulatory investigation, potential fines, reputational damage\r\n\r\n**Scenario 3: Healthcare Analytics**\r\n\r\n- Patient data becomes stale due to pipeline delays\r\n- Clinical decisions are made with outdated information\r\n- Result: Patient safety risks, potential legal liability\r\n\r\n# The Data Observability Stack\r\n\r\n## Core Components\r\n\r\nA comprehensive data observability solution typically includes:\r\n\r\n### Data Quality Testing\r\n\r\n```sql\r\n-- Example: Automated data quality check\r\nSELECT \r\n    COUNT(*) as total_records,\r\n    COUNT(CASE WHEN email IS NOT NULL AND email LIKE '%@%' THEN 1 END) as valid_emails,\r\n    COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '1 day' THEN 1 END) as recent_records\r\nFROM users\r\nWHERE created_at >= CURRENT_DATE - INTERVAL '7 days';\r\n```\r\n\r\n### Data Lineage Visualization\r\n\r\n- **Source tracking**: Identify where each data element originates\r\n- **Transformation mapping**: Document all data transformations\r\n- **Impact analysis**: Understand downstream dependencies\r\n\r\n### Real-time Monitoring\r\n\r\n- **Anomaly detection**: Identify unusual patterns in data\r\n- **Threshold alerts**: Get notified when metrics exceed limits\r\n- **Performance tracking**: Monitor pipeline execution times\r\n\r\n### Incident Management\r\n\r\n- **Root cause analysis**: Quickly identify data issues\r\n- **Automated remediation**: Fix common problems automatically\r\n- **Escalation procedures**: Route issues to appropriate teams\r\n\r\n# Best Practices for Data Observability\r\n\r\n## Start with the End in Mind\r\n\r\nFocus on the data that drives business decisions. Not all data needs the same level of observability.\r\n\r\n## Implement Progressive Monitoring\r\n\r\n- **Level 1**: Basic health checks (data exists, pipeline runs)\r\n- **Level 2**: Quality validation (data format, completeness)\r\n- **Level 3**: Business logic validation (domain-specific rules)\r\n- **Level 4**: Predictive monitoring (anomaly detection)\r\n\r\n## Create a Data Quality Culture\r\n\r\n- **Data ownership**: Assign responsibility for data quality\r\n- **Training**: Educate teams on data observability principles\r\n- **Documentation**: Maintain clear data definitions and business rules\r\n- **Collaboration**: Foster communication between data producers and consumers\r\n\r\n## Automate Everything Possible\r\n\r\n- **Automated testing**: Run data quality checks automatically\r\n- **Automated alerts**: Notify stakeholders of issues immediately\r\n- **Automated remediation**: Fix common problems without human intervention\r\n- **Automated reporting**: Generate regular data health reports\r\n\r\n## Measure and Iterate\r\n\r\n- **Track observability metrics**: Monitor the effectiveness of your observability system\r\n- **Gather feedback**: Collect input from data users\r\n- **Continuous improvement**: Regularly update and enhance your observability practices\r\n\r\n# The ROI of Data Observability\r\n\r\n## Tangible Benefits\r\n\r\nReduced Data Incidents\r\n\r\n- 60% reduction in data quality issues\r\n- 80% faster incident resolution\r\n- 90% reduction in data-related outages\r\n\r\nImproved Decision Making\r\n\r\n- 25% increase in data-driven decision confidence\r\n- 40% reduction in time spent on data validation\r\n- 30% improvement in business metrics accuracy\r\n\r\nOperational Efficiency\r\n\r\n- 50% reduction in manual data quality checks\r\n- 70% faster new data pipeline deployment\r\n- 45% reduction in data-related support tickets\r\n\r\n## Intangible Benefits\r\n\r\n- **Increased trust** in data across the organization\r\n- **Better collaboration** between technical and business teams\r\n- **Enhanced compliance** with data governance requirements\r\n- **Improved customer experience** through reliable data\r\n\r\n# Common Challenges and Solutions\r\n\r\n## Challenge 1: Tool Sprawl\r\n\r\n**Problem**: Multiple monitoring tools create confusion and overhead.\r\n\r\n**Solution**: Consolidate on a unified observability platform or create a centralized dashboard that aggregates insights from multiple tools.\r\n\r\n## Challenge 2: Alert Fatigue\r\n\r\n**Problem**: Too many alerts lead to ignored notifications.\r\n\r\n**Solution**: Implement intelligent alerting with proper thresholds, escalation procedures, and alert correlation.\r\n\r\n## Challenge 3: Data Silos\r\n\r\n**Problem**: Different teams use different data sources and tools.\r\n\r\n**Solution**: Establish data governance policies and create a unified data catalog with clear ownership and access controls.\r\n\r\n## Challenge 4: Skills Gap\r\n\r\n**Problem**: Teams lack expertise in data observability tools and practices.\r\n\r\n**Solution**: Invest in training, hire specialized talent, or partner with consultants to build internal capabilities.\r\n\r\n# Conclusion\r\n\r\nData observability gives you a strategic advantage:\r\n\r\n- **Prevent costly data incidents** before they impact your business\r\n- **Build trust** in your data across the organization\r\n- **Accelerate data-driven decision making** with confidence\r\n- **Improve operational efficiency** and reduce manual overhead\r\n\r\n<mark>Data observability is not a destination—it's a continuous journey of improvement and adaptation to your organization's evolving data needs.</mark>\r\n\r\nThe organizations that embrace data observability today will be the ones that moves ahead of their concurrent, enhance quality of their entire stack (data and infrastructure) and bring IT talent that can finaly focus on what matters : create, and not fixing the broken stuff.\r\n\r\nDon't wait until a data incident forces you to act. \r\n\r\nStart building your data observability foundation now, and position your organization for success in the data-driven future.\r\n\r\nIf you want to see what the future of data observability is, then check my current project <a href='https://focusdata.dev' target='_blank' class='text-accent hover:underline transition-colors'>focusdata.dev</a> and the article linked [Focus Data Observability Platform](https://jeoste.github.io/articles/focus-data-observability-platform/)\r\n\r\n---\r\n\r\n*Ready to transform your data strategy? Start your data observability journey today and unlock the full potential of your data assets.*","src/data/blog/data-observability.md","3aa5fb701edbeb58",{html:421,metadata:422},"<blockquote>\n<p>In today’s data-driven world, organizations needs to be digital, but struggle to keep a 100% functional and available data accross their systems. Data observability emerges as the optimum solution to be aware of the current situation of the information system.</p>\n</blockquote>\n<h1 id=\"data-observability-the-new-gold-rush\">Data Observability: The New Gold Rush</h1>\n<p>In the digital age, data has become the lifeblood of modern organizations. Every click, transaction, and interaction generates data points that flow through complex pipelines, databases, and analytics systems. But what happens when this data becomes unreliable, incomplete, or simply wrong? The consequences can be catastrophic—from missed business opportunities to regulatory compliance failures.</p>\n<p>This is where <strong>data observability</strong> comes into play—a comprehensive approach to monitoring, tracking, and troubleshooting data across your entire data ecosystem.</p>\n<h1 id=\"what-is-data-observability\">What is Data Observability?</h1>\n<p>Data observability is the ability to understand the health and state of data in your systems through continuous monitoring and alerting. It’s about having complete visibility into your data pipeline—from ingestion to consumption—ensuring that data is accurate, complete, and timely.</p>\n<p>Think of it as having a <strong>“data health monitoring system”</strong> that continuously checks the pulse of your data infrastructure, much like a doctor monitors vital signs.</p>\n<h2 id=\"the-five-pillars-of-data-observability\">The Five Pillars of Data Observability</h2>\n<p>Data observability rests on five fundamental pillars that work together to provide comprehensive visibility:</p>\n<h3 id=\"freshness\">Freshness</h3>\n<ul>\n<li><strong>Timeliness</strong>: Is your data up-to-date?</li>\n<li><strong>Latency</strong>: How long does it take for data to be available?</li>\n<li><strong>SLA Monitoring</strong>: Are you meeting your data delivery commitments?</li>\n</ul>\n<h3 id=\"quality\">Quality</h3>\n<ul>\n<li><strong>Accuracy</strong>: Is your data correct and trustworthy?</li>\n<li><strong>Completeness</strong>: Are all required fields populated?</li>\n<li><strong>Consistency</strong>: Are values consistent across different sources?</li>\n</ul>\n<h3 id=\"volume\">Volume</h3>\n<ul>\n<li><strong>Data Volume</strong>: Are you receiving the expected amount of data?</li>\n<li><strong>Growth Patterns</strong>: Is data volume growing as expected?</li>\n<li><strong>Anomaly Detection</strong>: Are there unexpected spikes or drops?</li>\n</ul>\n<h3 id=\"schema\">Schema</h3>\n<ul>\n<li><strong>Structure Changes</strong>: Has the structure of your data changed unexpectedly?</li>\n<li><strong>Field Validation</strong>: Are all fields present and properly typed?</li>\n<li><strong>Version Control</strong>: Are schema changes tracked and documented?</li>\n</ul>\n<h3 id=\"lineage\">Lineage</h3>\n<ul>\n<li><strong>Source to Destination</strong>: Where did this data come from?</li>\n<li><strong>Transformation History</strong>: What changes were made along the way?</li>\n<li><strong>Impact Analysis</strong>: What downstream systems depend on this data?</li>\n</ul>\n<h1 id=\"why-data-observability-matters\">Why Data Observability Matters</h1>\n<h2 id=\"the-hidden-cost-of-bad-data\">The Hidden Cost of Bad Data</h2>\n<p>Poor data quality costs organizations an estimated <strong>$12.9 million annually</strong> on average. This includes:</p>\n<ul>\n<li><strong>Operational inefficiencies</strong> from working with incorrect data</li>\n<li><strong>Missed revenue opportunities</strong> due to poor decision-making</li>\n<li><strong>Compliance risks</strong> and potential regulatory fines</li>\n<li><strong>Customer trust erosion</strong> from data-driven mistakes</li>\n</ul>\n<h2 id=\"real-world-scenarios\">Real-World Scenarios</h2>\n<p>Consider these common scenarios where data observability becomes critical:</p>\n<p><strong>Scenario 1: E-commerce Platform</strong></p>\n<ul>\n<li>A data pipeline failure goes unnoticed for 24 hours</li>\n<li>Marketing campaigns are launched with outdated customer data</li>\n<li>Result: 40% drop in conversion rates, $50,000 in lost revenue</li>\n</ul>\n<p><strong>Scenario 2: Financial Services</strong></p>\n<ul>\n<li>A schema change in transaction data breaks reporting</li>\n<li>Compliance reports are generated with incomplete data</li>\n<li>Result: Regulatory investigation, potential fines, reputational damage</li>\n</ul>\n<p><strong>Scenario 3: Healthcare Analytics</strong></p>\n<ul>\n<li>Patient data becomes stale due to pipeline delays</li>\n<li>Clinical decisions are made with outdated information</li>\n<li>Result: Patient safety risks, potential legal liability</li>\n</ul>\n<h1 id=\"the-data-observability-stack\">The Data Observability Stack</h1>\n<h2 id=\"core-components\">Core Components</h2>\n<p>A comprehensive data observability solution typically includes:</p>\n<h3 id=\"data-quality-testing\">Data Quality Testing</h3>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"sql\"><code><span class=\"line\"><span style=\"color:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#637777;--shiki-dark-font-style:italic\">-- Example: Automated data quality check</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">SELECT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> </span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#C5E478\">    COUNT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">(</span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">*</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">) </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">as</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> total_records,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#C5E478\">    COUNT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">(</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">CASE</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> WHEN</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> email </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">IS NOT NULL</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> AND</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> email </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">LIKE</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> '</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">%@%</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> THEN</span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 1</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> END</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">) </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">as</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> valid_emails,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#C5E478\">    COUNT</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">(</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">CASE</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> WHEN</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> created_at </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">>=</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> CURRENT_DATE </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">-</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> INTERVAL </span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">1 day</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> THEN</span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 1</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> END</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">) </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">as</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> recent_records</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">FROM</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> users</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">WHERE</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> created_at </span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\">>=</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> CURRENT_DATE </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">-</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> INTERVAL </span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">7 days</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">'</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">;</span></span></code></pre>\n<h3 id=\"data-lineage-visualization\">Data Lineage Visualization</h3>\n<ul>\n<li><strong>Source tracking</strong>: Identify where each data element originates</li>\n<li><strong>Transformation mapping</strong>: Document all data transformations</li>\n<li><strong>Impact analysis</strong>: Understand downstream dependencies</li>\n</ul>\n<h3 id=\"real-time-monitoring\">Real-time Monitoring</h3>\n<ul>\n<li><strong>Anomaly detection</strong>: Identify unusual patterns in data</li>\n<li><strong>Threshold alerts</strong>: Get notified when metrics exceed limits</li>\n<li><strong>Performance tracking</strong>: Monitor pipeline execution times</li>\n</ul>\n<h3 id=\"incident-management\">Incident Management</h3>\n<ul>\n<li><strong>Root cause analysis</strong>: Quickly identify data issues</li>\n<li><strong>Automated remediation</strong>: Fix common problems automatically</li>\n<li><strong>Escalation procedures</strong>: Route issues to appropriate teams</li>\n</ul>\n<h1 id=\"best-practices-for-data-observability\">Best Practices for Data Observability</h1>\n<h2 id=\"start-with-the-end-in-mind\">Start with the End in Mind</h2>\n<p>Focus on the data that drives business decisions. Not all data needs the same level of observability.</p>\n<h2 id=\"implement-progressive-monitoring\">Implement Progressive Monitoring</h2>\n<ul>\n<li><strong>Level 1</strong>: Basic health checks (data exists, pipeline runs)</li>\n<li><strong>Level 2</strong>: Quality validation (data format, completeness)</li>\n<li><strong>Level 3</strong>: Business logic validation (domain-specific rules)</li>\n<li><strong>Level 4</strong>: Predictive monitoring (anomaly detection)</li>\n</ul>\n<h2 id=\"create-a-data-quality-culture\">Create a Data Quality Culture</h2>\n<ul>\n<li><strong>Data ownership</strong>: Assign responsibility for data quality</li>\n<li><strong>Training</strong>: Educate teams on data observability principles</li>\n<li><strong>Documentation</strong>: Maintain clear data definitions and business rules</li>\n<li><strong>Collaboration</strong>: Foster communication between data producers and consumers</li>\n</ul>\n<h2 id=\"automate-everything-possible\">Automate Everything Possible</h2>\n<ul>\n<li><strong>Automated testing</strong>: Run data quality checks automatically</li>\n<li><strong>Automated alerts</strong>: Notify stakeholders of issues immediately</li>\n<li><strong>Automated remediation</strong>: Fix common problems without human intervention</li>\n<li><strong>Automated reporting</strong>: Generate regular data health reports</li>\n</ul>\n<h2 id=\"measure-and-iterate\">Measure and Iterate</h2>\n<ul>\n<li><strong>Track observability metrics</strong>: Monitor the effectiveness of your observability system</li>\n<li><strong>Gather feedback</strong>: Collect input from data users</li>\n<li><strong>Continuous improvement</strong>: Regularly update and enhance your observability practices</li>\n</ul>\n<h1 id=\"the-roi-of-data-observability\">The ROI of Data Observability</h1>\n<h2 id=\"tangible-benefits\">Tangible Benefits</h2>\n<p>Reduced Data Incidents</p>\n<ul>\n<li>60% reduction in data quality issues</li>\n<li>80% faster incident resolution</li>\n<li>90% reduction in data-related outages</li>\n</ul>\n<p>Improved Decision Making</p>\n<ul>\n<li>25% increase in data-driven decision confidence</li>\n<li>40% reduction in time spent on data validation</li>\n<li>30% improvement in business metrics accuracy</li>\n</ul>\n<p>Operational Efficiency</p>\n<ul>\n<li>50% reduction in manual data quality checks</li>\n<li>70% faster new data pipeline deployment</li>\n<li>45% reduction in data-related support tickets</li>\n</ul>\n<h2 id=\"intangible-benefits\">Intangible Benefits</h2>\n<ul>\n<li><strong>Increased trust</strong> in data across the organization</li>\n<li><strong>Better collaboration</strong> between technical and business teams</li>\n<li><strong>Enhanced compliance</strong> with data governance requirements</li>\n<li><strong>Improved customer experience</strong> through reliable data</li>\n</ul>\n<h1 id=\"common-challenges-and-solutions\">Common Challenges and Solutions</h1>\n<h2 id=\"challenge-1-tool-sprawl\">Challenge 1: Tool Sprawl</h2>\n<p><strong>Problem</strong>: Multiple monitoring tools create confusion and overhead.</p>\n<p><strong>Solution</strong>: Consolidate on a unified observability platform or create a centralized dashboard that aggregates insights from multiple tools.</p>\n<h2 id=\"challenge-2-alert-fatigue\">Challenge 2: Alert Fatigue</h2>\n<p><strong>Problem</strong>: Too many alerts lead to ignored notifications.</p>\n<p><strong>Solution</strong>: Implement intelligent alerting with proper thresholds, escalation procedures, and alert correlation.</p>\n<h2 id=\"challenge-3-data-silos\">Challenge 3: Data Silos</h2>\n<p><strong>Problem</strong>: Different teams use different data sources and tools.</p>\n<p><strong>Solution</strong>: Establish data governance policies and create a unified data catalog with clear ownership and access controls.</p>\n<h2 id=\"challenge-4-skills-gap\">Challenge 4: Skills Gap</h2>\n<p><strong>Problem</strong>: Teams lack expertise in data observability tools and practices.</p>\n<p><strong>Solution</strong>: Invest in training, hire specialized talent, or partner with consultants to build internal capabilities.</p>\n<h1 id=\"conclusion\">Conclusion</h1>\n<p>Data observability gives you a strategic advantage:</p>\n<ul>\n<li><strong>Prevent costly data incidents</strong> before they impact your business</li>\n<li><strong>Build trust</strong> in your data across the organization</li>\n<li><strong>Accelerate data-driven decision making</strong> with confidence</li>\n<li><strong>Improve operational efficiency</strong> and reduce manual overhead</li>\n</ul>\n<p><mark>Data observability is not a destination—it’s a continuous journey of improvement and adaptation to your organization’s evolving data needs.</mark></p>\n<p>The organizations that embrace data observability today will be the ones that moves ahead of their concurrent, enhance quality of their entire stack (data and infrastructure) and bring IT talent that can finaly focus on what matters : create, and not fixing the broken stuff.</p>\n<p>Don’t wait until a data incident forces you to act.</p>\n<p>Start building your data observability foundation now, and position your organization for success in the data-driven future.</p>\n<p>If you want to see what the future of data observability is, then check my current project <a href=\"https://focusdata.dev\" target=\"_blank\" class=\"text-accent hover:underline transition-colors\">focusdata.dev</a> and the article linked <a href=\"https://jeoste.github.io/articles/focus-data-observability-platform/\">Focus Data Observability Platform</a></p>\n<hr>\n<p><em>Ready to transform your data strategy? Start your data observability journey today and unlock the full potential of your data assets.</em></p>",{headings:423,localImagePaths:516,remoteImagePaths:517,frontmatter:518,imagePaths:522},[424,427,430,433,436,439,440,443,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515],{depth:120,slug:425,text:426},"data-observability-the-new-gold-rush","Data Observability: The New Gold Rush",{depth:120,slug:428,text:429},"what-is-data-observability","What is Data Observability?",{depth:32,slug:431,text:432},"the-five-pillars-of-data-observability","The Five Pillars of Data Observability",{depth:36,slug:434,text:435},"freshness","Freshness",{depth:36,slug:437,text:438},"quality","Quality",{depth:36,slug:52,text:53},{depth:36,slug:441,text:442},"schema","Schema",{depth:36,slug:444,text:445},"lineage","Lineage",{depth:120,slug:447,text:448},"why-data-observability-matters","Why Data Observability Matters",{depth:32,slug:450,text:451},"the-hidden-cost-of-bad-data","The Hidden Cost of Bad Data",{depth:32,slug:453,text:454},"real-world-scenarios","Real-World Scenarios",{depth:120,slug:456,text:457},"the-data-observability-stack","The Data Observability Stack",{depth:32,slug:459,text:460},"core-components","Core Components",{depth:36,slug:462,text:463},"data-quality-testing","Data Quality Testing",{depth:36,slug:465,text:466},"data-lineage-visualization","Data Lineage Visualization",{depth:36,slug:468,text:469},"real-time-monitoring","Real-time Monitoring",{depth:36,slug:471,text:472},"incident-management","Incident Management",{depth:120,slug:474,text:475},"best-practices-for-data-observability","Best Practices for Data Observability",{depth:32,slug:477,text:478},"start-with-the-end-in-mind","Start with the End in Mind",{depth:32,slug:480,text:481},"implement-progressive-monitoring","Implement Progressive Monitoring",{depth:32,slug:483,text:484},"create-a-data-quality-culture","Create a Data Quality Culture",{depth:32,slug:486,text:487},"automate-everything-possible","Automate Everything Possible",{depth:32,slug:489,text:490},"measure-and-iterate","Measure and Iterate",{depth:120,slug:492,text:493},"the-roi-of-data-observability","The ROI of Data Observability",{depth:32,slug:495,text:496},"tangible-benefits","Tangible Benefits",{depth:32,slug:498,text:499},"intangible-benefits","Intangible Benefits",{depth:120,slug:501,text:502},"common-challenges-and-solutions","Common Challenges and Solutions",{depth:32,slug:504,text:505},"challenge-1-tool-sprawl","Challenge 1: Tool Sprawl",{depth:32,slug:507,text:508},"challenge-2-alert-fatigue","Challenge 2: Alert Fatigue",{depth:32,slug:510,text:511},"challenge-3-data-silos","Challenge 3: Data Silos",{depth:32,slug:513,text:514},"challenge-4-skills-gap","Challenge 4: Skills Gap",{depth:120,slug:145,text:146},[],[],{author:14,pubDatetime:519,modDatetime:520,title:408,tags:521,description:416},["Date","2025-07-28T01:08:52.777Z"],["Date","2025-08-02T10:57:52.777Z"],[19,410,411,412,413,414,415],[],"focus-data-observability-platform",{id:523,data:525,body:534,filePath:535,digest:536,rendered:537},{author:14,pubDatetime:526,modDatetime:527,title:528,tags:529,description:533},["Date","2025-01-27T10:00:00.000Z"],["Date","2025-01-27T10:00:00.000Z"],"FOCUS - Building a Modern Data Observability Platform from Scratch",[410,19,530,411,531,532],"data quality","data platform","focus","Discover FOCUS, a comprehensive data observability platform designed to monitor, validate, and ensure data quality across your entire data ecosystem","## Introduction\r\n\r\nIn today's data-driven world, organizations face unprecedented challenges in maintaining data quality, reliability, and trust. As data pipelines become more complex and data volumes grow exponentially, traditional monitoring approaches fall short. This is where **FOCUS** comes in—a modern, comprehensive data observability platform designed to provide complete visibility into your data ecosystem.\r\n\r\n## What is FOCUS?\r\n\r\n**FOCUS** (Focus On Complete Understanding of Systems) is a data observability platform that helps organizations monitor, validate, and ensure data quality across their entire data infrastructure. Built from the ground up with modern architecture principles, FOCUS provides real-time insights into data health, lineage, and reliability.\r\n\r\n### Key Features\r\n\r\n#### Comprehensive Data Monitoring\r\n\r\n- **Real-time data quality checks** with customizable rules and thresholds\r\n- **Data freshness monitoring** to ensure timely data delivery\r\n- **Schema drift detection** to catch structural changes early\r\n- **Volume anomaly detection** to identify unusual data patterns\r\n\r\n#### Advanced Analytics & Visualization\r\n\r\n- **Interactive dashboards** for data health overview\r\n- **Customizable alerts** and notifications\r\n- **Historical trend analysis** for proactive issue detection\r\n- **Data lineage visualization** to understand data flow\r\n\r\n#### Multi-Platform Integration\r\n\r\n- **Database connectors** (PostgreSQL, MySQL, Oracle, SQL Server)\r\n- **Cloud data warehouses** (Snowflake, BigQuery, Redshift)\r\n- **Data lakes** (S3, Azure Data Lake, GCS)\r\n- **Streaming platforms** (Kafka, Kinesis)\r\n- **ETL/ELT tools** (Airflow, dbt, Fivetran)\r\n\r\n#### Data Governance & Compliance\r\n\r\n- **Data cataloging** and metadata management\r\n- **Access control** and audit trails\r\n- **GDPR/CCPA compliance** features\r\n- **Data privacy** and security monitoring\r\n\r\n## Why Data Observability Matters\r\n\r\n### The Data Quality Challenge\r\n\r\nModern organizations rely on data for critical business decisions, but data quality issues can have severe consequences:\r\n\r\n- **Financial losses** from incorrect analytics\r\n- **Operational disruptions** due to data pipeline failures\r\n- **Compliance risks** from data governance gaps\r\n- **Customer trust erosion** from unreliable insights\r\n\r\n### Traditional Monitoring vs. Data Observability\r\n\r\n| Traditional Monitoring | Data Observability |\r\n|----------------------|-------------------|\r\n| Focuses on infrastructure | Focuses on data itself |\r\n| Reactive problem detection | Proactive issue prevention |\r\n| Limited data context | Complete data lineage |\r\n| Basic alerting | Intelligent anomaly detection |\r\n| Siloed monitoring | Holistic data view |\r\n\r\n## FOCUS Architecture\r\n\r\n### Core Components\r\n\r\n#### 1. Data Collection Layer\r\n\r\n- **Connectors** for various data sources\r\n- **Real-time streaming** capabilities\r\n- **Batch processing** support\r\n- **API integration** for custom sources\r\n\r\n#### 2. Processing Engine\r\n\r\n- **Rule engine** for data quality checks\r\n- **Anomaly detection** algorithms\r\n- **Statistical analysis** capabilities\r\n- **Machine learning** for pattern recognition\r\n\r\n#### 3. Storage & Analytics\r\n\r\n- **Time-series database** for metrics\r\n- **Document store** for metadata\r\n- **Graph database** for lineage tracking\r\n- **Data warehouse** for historical analysis\r\n\r\n#### 4. Presentation Layer\r\n\r\n- **Web dashboard** for real-time monitoring\r\n- **API endpoints** for integration\r\n- **Alerting system** with multiple channels\r\n- **Reporting engine** for insights\r\n\r\n### Technology Stack\r\n\r\n- **Backend**: Modern microservices architecture\r\n- **Frontend**: React-based responsive dashboard\r\n- **Database**: PostgreSQL, Redis, Elasticsearch\r\n- **Message Queue**: Apache Kafka\r\n- **Containerization**: Docker & Kubernetes\r\n- **Cloud**: Multi-cloud deployment support\r\n\r\n## Use Cases & Applications\r\n\r\n### 1. **E-commerce Data Quality**\r\n**Challenge**: Ensuring accurate inventory, pricing, and customer data across multiple systems.\r\n\r\n**FOCUS Solution**:\r\n- Monitor inventory data freshness and accuracy\r\n- Detect pricing anomalies across channels\r\n- Validate customer data completeness\r\n- Track data lineage from source to analytics\r\n\r\n### 2. **Financial Services Compliance**\r\n**Challenge**: Meeting regulatory requirements while maintaining data accuracy.\r\n\r\n**FOCUS Solution**:\r\n- Automated compliance checks for financial data\r\n- Audit trail for all data transformations\r\n- Real-time monitoring of transaction data\r\n- Regulatory reporting automation\r\n\r\n### 3. **Healthcare Data Management**\r\n**Challenge**: Ensuring patient data accuracy and privacy compliance.\r\n\r\n**FOCUS Solution**:\r\n- HIPAA-compliant data monitoring\r\n- Patient data quality validation\r\n- Secure data lineage tracking\r\n- Automated privacy checks\r\n\r\n### 4. **Manufacturing IoT Data**\r\n**Challenge**: Processing and validating massive amounts of sensor data.\r\n\r\n**FOCUS Solution**:\r\n- Real-time sensor data validation\r\n- Equipment performance monitoring\r\n- Predictive maintenance data quality\r\n- Supply chain data tracking\r\n\r\n## Getting Started with FOCUS\r\n\r\n### Installation & Setup\r\n\r\n```bash\r\n# Quick start with Docker\r\ndocker run -d \\\r\n  --name focus-platform \\\r\n  -p 8080:8080 \\\r\n  -e DATABASE_URL=postgresql://user:pass@host:5432/focus \\\r\n  focusdata/focus:latest\r\n```\r\n\r\n### Configuration Example\r\n\r\n```yaml\r\n# focus-config.yaml\r\ndata_sources:\r\n  - name: \"production_database\"\r\n    type: \"postgresql\"\r\n    connection:\r\n      host: \"db.example.com\"\r\n      port: 5432\r\n      database: \"analytics\"\r\n    \r\n  - name: \"data_warehouse\"\r\n    type: \"snowflake\"\r\n    connection:\r\n      account: \"your-account\"\r\n      warehouse: \"COMPUTE_WH\"\r\n\r\nmonitoring_rules:\r\n  - name: \"data_freshness\"\r\n    type: \"freshness\"\r\n    threshold: \"1h\"\r\n    \r\n  - name: \"volume_check\"\r\n    type: \"volume\"\r\n    min_records: 1000\r\n    max_records: 100000\r\n```\r\n\r\n### Dashboard Overview\r\n\r\nThe FOCUS dashboard provides:\r\n\r\n- **Data Health Score**: Overall data quality metrics\r\n- **Active Alerts**: Real-time issue notifications\r\n- **Data Lineage Map**: Visual data flow representation\r\n- **Performance Metrics**: System and data processing stats\r\n- **Custom Widgets**: User-defined monitoring views\r\n\r\n## Benefits of Using FOCUS\r\n\r\n### Operational Excellence\r\n\r\n- **Reduced downtime** through proactive monitoring\r\n- **Faster issue resolution** with detailed diagnostics\r\n- **Improved data pipeline reliability**\r\n- **Automated quality checks** reduce manual effort\r\n\r\n### Cost Optimization\r\n\r\n- **Prevent data quality issues** before they impact business\r\n- **Reduce data engineering overhead**\r\n- **Optimize resource utilization**\r\n- **Minimize compliance risks**\r\n\r\n### Enhanced Visibility\r\n\r\n- **Complete data lineage** tracking\r\n- **Real-time data health** monitoring\r\n- **Historical trend analysis**\r\n- **Cross-system data correlation**\r\n\r\n### Risk Mitigation\r\n\r\n- **Proactive issue detection**\r\n- **Compliance automation**\r\n- **Data governance enforcement**\r\n- **Audit trail maintenance**\r\n\r\n\r\n\r\n## Conclusion\r\n\r\nData observability is no longer a luxury—it's a necessity for modern organizations. FOCUS provides the comprehensive monitoring, validation, and governance capabilities needed to ensure data quality and reliability across your entire data ecosystem.\r\n\r\nWhether you're just starting your data journey or managing complex, multi-platform data architectures, FOCUS adapts to your needs and scales with your growth.\r\n\r\n### Ready to Get Started?\r\n\r\nVisit [focusdata.dev](https://focusdata.dev) to learn more about FOCUS and start your data observability journey today.\r\n\r\n---\r\n\r\n*FOCUS: Because your data deserves attention.*\r\n\r\n## Resources\r\n\r\n- **Documentation**: [docs.focusdata.dev](https://docs.focusdata.dev)\r\n- **GitHub**: [github.com/focusdata](https://github.com/focusdata)\r\n- **Community**: [community.focusdata.dev](https://community.focusdata.dev)\r\n- **Support**: [support@focusdata.dev](mailto:support@focusdata.dev)","src/data/blog/focus-data-observability-platform.md","9ea55aa821f2d5b7",{html:538,metadata:539},"<h2 id=\"introduction\">Introduction</h2>\n<p>In today’s data-driven world, organizations face unprecedented challenges in maintaining data quality, reliability, and trust. As data pipelines become more complex and data volumes grow exponentially, traditional monitoring approaches fall short. This is where <strong>FOCUS</strong> comes in—a modern, comprehensive data observability platform designed to provide complete visibility into your data ecosystem.</p>\n<h2 id=\"what-is-focus\">What is FOCUS?</h2>\n<p><strong>FOCUS</strong> (Focus On Complete Understanding of Systems) is a data observability platform that helps organizations monitor, validate, and ensure data quality across their entire data infrastructure. Built from the ground up with modern architecture principles, FOCUS provides real-time insights into data health, lineage, and reliability.</p>\n<h3 id=\"key-features\">Key Features</h3>\n<h4 id=\"comprehensive-data-monitoring\">Comprehensive Data Monitoring</h4>\n<ul>\n<li><strong>Real-time data quality checks</strong> with customizable rules and thresholds</li>\n<li><strong>Data freshness monitoring</strong> to ensure timely data delivery</li>\n<li><strong>Schema drift detection</strong> to catch structural changes early</li>\n<li><strong>Volume anomaly detection</strong> to identify unusual data patterns</li>\n</ul>\n<h4 id=\"advanced-analytics--visualization\">Advanced Analytics &#x26; Visualization</h4>\n<ul>\n<li><strong>Interactive dashboards</strong> for data health overview</li>\n<li><strong>Customizable alerts</strong> and notifications</li>\n<li><strong>Historical trend analysis</strong> for proactive issue detection</li>\n<li><strong>Data lineage visualization</strong> to understand data flow</li>\n</ul>\n<h4 id=\"multi-platform-integration\">Multi-Platform Integration</h4>\n<ul>\n<li><strong>Database connectors</strong> (PostgreSQL, MySQL, Oracle, SQL Server)</li>\n<li><strong>Cloud data warehouses</strong> (Snowflake, BigQuery, Redshift)</li>\n<li><strong>Data lakes</strong> (S3, Azure Data Lake, GCS)</li>\n<li><strong>Streaming platforms</strong> (Kafka, Kinesis)</li>\n<li><strong>ETL/ELT tools</strong> (Airflow, dbt, Fivetran)</li>\n</ul>\n<h4 id=\"data-governance--compliance\">Data Governance &#x26; Compliance</h4>\n<ul>\n<li><strong>Data cataloging</strong> and metadata management</li>\n<li><strong>Access control</strong> and audit trails</li>\n<li><strong>GDPR/CCPA compliance</strong> features</li>\n<li><strong>Data privacy</strong> and security monitoring</li>\n</ul>\n<h2 id=\"why-data-observability-matters\">Why Data Observability Matters</h2>\n<h3 id=\"the-data-quality-challenge\">The Data Quality Challenge</h3>\n<p>Modern organizations rely on data for critical business decisions, but data quality issues can have severe consequences:</p>\n<ul>\n<li><strong>Financial losses</strong> from incorrect analytics</li>\n<li><strong>Operational disruptions</strong> due to data pipeline failures</li>\n<li><strong>Compliance risks</strong> from data governance gaps</li>\n<li><strong>Customer trust erosion</strong> from unreliable insights</li>\n</ul>\n<h3 id=\"traditional-monitoring-vs-data-observability\">Traditional Monitoring vs. Data Observability</h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Traditional Monitoring</th><th>Data Observability</th></tr></thead><tbody><tr><td>Focuses on infrastructure</td><td>Focuses on data itself</td></tr><tr><td>Reactive problem detection</td><td>Proactive issue prevention</td></tr><tr><td>Limited data context</td><td>Complete data lineage</td></tr><tr><td>Basic alerting</td><td>Intelligent anomaly detection</td></tr><tr><td>Siloed monitoring</td><td>Holistic data view</td></tr></tbody></table>\n<h2 id=\"focus-architecture\">FOCUS Architecture</h2>\n<h3 id=\"core-components\">Core Components</h3>\n<h4 id=\"1-data-collection-layer\">1. Data Collection Layer</h4>\n<ul>\n<li><strong>Connectors</strong> for various data sources</li>\n<li><strong>Real-time streaming</strong> capabilities</li>\n<li><strong>Batch processing</strong> support</li>\n<li><strong>API integration</strong> for custom sources</li>\n</ul>\n<h4 id=\"2-processing-engine\">2. Processing Engine</h4>\n<ul>\n<li><strong>Rule engine</strong> for data quality checks</li>\n<li><strong>Anomaly detection</strong> algorithms</li>\n<li><strong>Statistical analysis</strong> capabilities</li>\n<li><strong>Machine learning</strong> for pattern recognition</li>\n</ul>\n<h4 id=\"3-storage--analytics\">3. Storage &#x26; Analytics</h4>\n<ul>\n<li><strong>Time-series database</strong> for metrics</li>\n<li><strong>Document store</strong> for metadata</li>\n<li><strong>Graph database</strong> for lineage tracking</li>\n<li><strong>Data warehouse</strong> for historical analysis</li>\n</ul>\n<h4 id=\"4-presentation-layer\">4. Presentation Layer</h4>\n<ul>\n<li><strong>Web dashboard</strong> for real-time monitoring</li>\n<li><strong>API endpoints</strong> for integration</li>\n<li><strong>Alerting system</strong> with multiple channels</li>\n<li><strong>Reporting engine</strong> for insights</li>\n</ul>\n<h3 id=\"technology-stack\">Technology Stack</h3>\n<ul>\n<li><strong>Backend</strong>: Modern microservices architecture</li>\n<li><strong>Frontend</strong>: React-based responsive dashboard</li>\n<li><strong>Database</strong>: PostgreSQL, Redis, Elasticsearch</li>\n<li><strong>Message Queue</strong>: Apache Kafka</li>\n<li><strong>Containerization</strong>: Docker &#x26; Kubernetes</li>\n<li><strong>Cloud</strong>: Multi-cloud deployment support</li>\n</ul>\n<h2 id=\"use-cases--applications\">Use Cases &#x26; Applications</h2>\n<h3 id=\"1-e-commerce-data-quality\">1. <strong>E-commerce Data Quality</strong></h3>\n<p><strong>Challenge</strong>: Ensuring accurate inventory, pricing, and customer data across multiple systems.</p>\n<p><strong>FOCUS Solution</strong>:</p>\n<ul>\n<li>Monitor inventory data freshness and accuracy</li>\n<li>Detect pricing anomalies across channels</li>\n<li>Validate customer data completeness</li>\n<li>Track data lineage from source to analytics</li>\n</ul>\n<h3 id=\"2-financial-services-compliance\">2. <strong>Financial Services Compliance</strong></h3>\n<p><strong>Challenge</strong>: Meeting regulatory requirements while maintaining data accuracy.</p>\n<p><strong>FOCUS Solution</strong>:</p>\n<ul>\n<li>Automated compliance checks for financial data</li>\n<li>Audit trail for all data transformations</li>\n<li>Real-time monitoring of transaction data</li>\n<li>Regulatory reporting automation</li>\n</ul>\n<h3 id=\"3-healthcare-data-management\">3. <strong>Healthcare Data Management</strong></h3>\n<p><strong>Challenge</strong>: Ensuring patient data accuracy and privacy compliance.</p>\n<p><strong>FOCUS Solution</strong>:</p>\n<ul>\n<li>HIPAA-compliant data monitoring</li>\n<li>Patient data quality validation</li>\n<li>Secure data lineage tracking</li>\n<li>Automated privacy checks</li>\n</ul>\n<h3 id=\"4-manufacturing-iot-data\">4. <strong>Manufacturing IoT Data</strong></h3>\n<p><strong>Challenge</strong>: Processing and validating massive amounts of sensor data.</p>\n<p><strong>FOCUS Solution</strong>:</p>\n<ul>\n<li>Real-time sensor data validation</li>\n<li>Equipment performance monitoring</li>\n<li>Predictive maintenance data quality</li>\n<li>Supply chain data tracking</li>\n</ul>\n<h2 id=\"getting-started-with-focus\">Getting Started with FOCUS</h2>\n<h3 id=\"installation--setup\">Installation &#x26; Setup</h3>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#637777;--shiki-dark-font-style:italic\"># Quick start with Docker</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-light-font-style:inherit;--shiki-dark:#82AAFF;--shiki-dark-font-style:italic\">docker</span><span style=\"color:#2B5581;--shiki-dark:#ECC48D\"> run</span><span style=\"color:#2B5581;--shiki-dark:#82AAFF\"> -d</span><span style=\"color:#24292EFF;--shiki-dark:#F78C6C\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#2B5581;--shiki-dark:#82AAFF\">  --name</span><span style=\"color:#2B5581;--shiki-dark:#ECC48D\"> focus-platform</span><span style=\"color:#24292EFF;--shiki-dark:#F78C6C\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#2B5581;--shiki-dark:#82AAFF\">  -p</span><span style=\"color:#2B5581;--shiki-dark:#ECC48D\"> 8080:8080</span><span style=\"color:#24292EFF;--shiki-dark:#F78C6C\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#2B5581;--shiki-dark:#82AAFF\">  -e</span><span style=\"color:#2B5581;--shiki-dark:#ECC48D\"> DATABASE_URL=postgresql://user:pass@host:5432/focus</span><span style=\"color:#24292EFF;--shiki-dark:#F78C6C\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#2B5581;--shiki-dark:#ECC48D\">  focusdata/focus:latest</span></span></code></pre>\n<h3 id=\"configuration-example\">Configuration Example</h3>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"yaml\"><code><span class=\"line\"><span style=\"color:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#637777;--shiki-dark-font-style:italic\"># focus-config.yaml</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">data_sources</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  - </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">name</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">production_database</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    type</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">postgresql</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    connection</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">      host</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">db.example.com</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">      port</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 5432</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">      database</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">analytics</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  - </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">name</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">data_warehouse</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    type</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">snowflake</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    connection</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">      account</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">your-account</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">      warehouse</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">COMPUTE_WH</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">monitoring_rules</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  - </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">name</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">data_freshness</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    type</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">freshness</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    threshold</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">1h</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  - </span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">name</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">volume_check</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    type</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\"> \"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">volume</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    min_records</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 1000</span></span>\n<span class=\"line\"><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">    max_records</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#1976D2;--shiki-dark:#F78C6C\"> 100000</span></span></code></pre>\n<h3 id=\"dashboard-overview\">Dashboard Overview</h3>\n<p>The FOCUS dashboard provides:</p>\n<ul>\n<li><strong>Data Health Score</strong>: Overall data quality metrics</li>\n<li><strong>Active Alerts</strong>: Real-time issue notifications</li>\n<li><strong>Data Lineage Map</strong>: Visual data flow representation</li>\n<li><strong>Performance Metrics</strong>: System and data processing stats</li>\n<li><strong>Custom Widgets</strong>: User-defined monitoring views</li>\n</ul>\n<h2 id=\"benefits-of-using-focus\">Benefits of Using FOCUS</h2>\n<h3 id=\"operational-excellence\">Operational Excellence</h3>\n<ul>\n<li><strong>Reduced downtime</strong> through proactive monitoring</li>\n<li><strong>Faster issue resolution</strong> with detailed diagnostics</li>\n<li><strong>Improved data pipeline reliability</strong></li>\n<li><strong>Automated quality checks</strong> reduce manual effort</li>\n</ul>\n<h3 id=\"cost-optimization\">Cost Optimization</h3>\n<ul>\n<li><strong>Prevent data quality issues</strong> before they impact business</li>\n<li><strong>Reduce data engineering overhead</strong></li>\n<li><strong>Optimize resource utilization</strong></li>\n<li><strong>Minimize compliance risks</strong></li>\n</ul>\n<h3 id=\"enhanced-visibility\">Enhanced Visibility</h3>\n<ul>\n<li><strong>Complete data lineage</strong> tracking</li>\n<li><strong>Real-time data health</strong> monitoring</li>\n<li><strong>Historical trend analysis</strong></li>\n<li><strong>Cross-system data correlation</strong></li>\n</ul>\n<h3 id=\"risk-mitigation\">Risk Mitigation</h3>\n<ul>\n<li><strong>Proactive issue detection</strong></li>\n<li><strong>Compliance automation</strong></li>\n<li><strong>Data governance enforcement</strong></li>\n<li><strong>Audit trail maintenance</strong></li>\n</ul>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Data observability is no longer a luxury—it’s a necessity for modern organizations. FOCUS provides the comprehensive monitoring, validation, and governance capabilities needed to ensure data quality and reliability across your entire data ecosystem.</p>\n<p>Whether you’re just starting your data journey or managing complex, multi-platform data architectures, FOCUS adapts to your needs and scales with your growth.</p>\n<h3 id=\"ready-to-get-started\">Ready to Get Started?</h3>\n<p>Visit <a href=\"https://focusdata.dev\">focusdata.dev</a> to learn more about FOCUS and start your data observability journey today.</p>\n<hr>\n<p><em>FOCUS: Because your data deserves attention.</em></p>\n<h2 id=\"resources\">Resources</h2>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://docs.focusdata.dev\">docs.focusdata.dev</a></li>\n<li><strong>GitHub</strong>: <a href=\"https://github.com/focusdata\">github.com/focusdata</a></li>\n<li><strong>Community</strong>: <a href=\"https://community.focusdata.dev\">community.focusdata.dev</a></li>\n<li><strong>Support</strong>: <a href=\"mailto:support@focusdata.dev\">support@focusdata.dev</a></li>\n</ul>",{headings:540,localImagePaths:635,remoteImagePaths:636,frontmatter:637,imagePaths:641},[541,542,545,548,551,554,557,560,561,564,567,570,571,574,577,580,583,586,589,592,595,598,601,604,607,610,613,616,619,622,625,628,629,632],{depth:32,slug:117,text:118},{depth:32,slug:543,text:544},"what-is-focus","What is FOCUS?",{depth:36,slug:546,text:547},"key-features","Key Features",{depth:311,slug:549,text:550},"comprehensive-data-monitoring","Comprehensive Data Monitoring",{depth:311,slug:552,text:553},"advanced-analytics--visualization","Advanced Analytics & Visualization",{depth:311,slug:555,text:556},"multi-platform-integration","Multi-Platform Integration",{depth:311,slug:558,text:559},"data-governance--compliance","Data Governance & Compliance",{depth:32,slug:447,text:448},{depth:36,slug:562,text:563},"the-data-quality-challenge","The Data Quality Challenge",{depth:36,slug:565,text:566},"traditional-monitoring-vs-data-observability","Traditional Monitoring vs. Data Observability",{depth:32,slug:568,text:569},"focus-architecture","FOCUS Architecture",{depth:36,slug:459,text:460},{depth:311,slug:572,text:573},"1-data-collection-layer","1. Data Collection Layer",{depth:311,slug:575,text:576},"2-processing-engine","2. Processing Engine",{depth:311,slug:578,text:579},"3-storage--analytics","3. Storage & Analytics",{depth:311,slug:581,text:582},"4-presentation-layer","4. Presentation Layer",{depth:36,slug:584,text:585},"technology-stack","Technology Stack",{depth:32,slug:587,text:588},"use-cases--applications","Use Cases & Applications",{depth:36,slug:590,text:591},"1-e-commerce-data-quality","1. E-commerce Data Quality",{depth:36,slug:593,text:594},"2-financial-services-compliance","2. Financial Services Compliance",{depth:36,slug:596,text:597},"3-healthcare-data-management","3. Healthcare Data Management",{depth:36,slug:599,text:600},"4-manufacturing-iot-data","4. Manufacturing IoT Data",{depth:32,slug:602,text:603},"getting-started-with-focus","Getting Started with FOCUS",{depth:36,slug:605,text:606},"installation--setup","Installation & Setup",{depth:36,slug:608,text:609},"configuration-example","Configuration Example",{depth:36,slug:611,text:612},"dashboard-overview","Dashboard Overview",{depth:32,slug:614,text:615},"benefits-of-using-focus","Benefits of Using FOCUS",{depth:36,slug:617,text:618},"operational-excellence","Operational Excellence",{depth:36,slug:620,text:621},"cost-optimization","Cost Optimization",{depth:36,slug:623,text:624},"enhanced-visibility","Enhanced Visibility",{depth:36,slug:626,text:627},"risk-mitigation","Risk Mitigation",{depth:32,slug:145,text:146},{depth:36,slug:630,text:631},"ready-to-get-started","Ready to Get Started?",{depth:32,slug:633,text:634},"resources","Resources",[],[],{author:14,pubDatetime:638,modDatetime:639,title:528,tags:640,description:533},["Date","2025-01-27T10:00:00.000Z"],["Date","2025-01-27T10:00:00.000Z"],[410,19,530,411,531,532],[],"examples/tailwind-typography",{id:642,data:644,body:649,filePath:650,digest:651,rendered:652},{author:73,pubDatetime:645,title:646,featured:76,draft:77,tags:647,description:648},["Date","2022-07-05T02:05:51.000Z"],"Tailwind Typography Plugin",[79,80],"EXAMPLE POST: About Tailwind Typography Plugin and how you can use it effectively.","> This article is from [TailwindLabs](https://tailwindcss-typography.vercel.app/). I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.\r\n\r\nBy default, Tailwind removes all of the default browser styling from paragraphs, headings, lists and more. This ends up being really useful for building application UIs because you spend less time undoing user-agent styles, but when you _really are_ just trying to style some content that came from a rich-text editor in a CMS or a markdown file, it can be surprising and unintuitive.\r\n\r\nWe get lots of complaints about it actually, with people regularly asking us things like:\r\n\r\n> Why is Tailwind removing the default styles on my `h1` elements? How do I disable this? What do you mean I lose all the other base styles too?\r\n> We hear you, but we're not convinced that simply disabling our base styles is what you really want. You don't want to have to remove annoying margins every time you use a `p` element in a piece of your dashboard UI. And I doubt you really want your blog posts to use the user-agent styles either — you want them to look _awesome_, not awful.\r\n\r\nThe `@tailwindcss/typography` plugin is our attempt to give you what you _actually_ want, without any of the downsides of doing something stupid like disabling our base styles.\r\n\r\nIt adds a new `prose` class that you can slap on any block of vanilla HTML content and turn it into a beautiful, well-formatted document:\r\n\r\n```html\r\n<article class=\"prose\">\r\n  <h1>Garlic bread with cheese: What the science tells us</h1>\r\n  <p>\r\n    For years parents have espoused the health benefits of eating garlic bread\r\n    with cheese to their children, with the food earning such an iconic status\r\n    in our culture that kids will often dress up as warm, cheesy loaf for\r\n    Halloween.\r\n  </p>\r\n  <p>\r\n    But a recent study shows that the celebrated appetizer may be linked to a\r\n    series of rabies cases springing up around the country.\r\n  </p>\r\n  <!-- ... -->\r\n</article>\r\n```\r\n\r\nFor more information about how to use the plugin and the features it includes, [read the documentation](https://github.com/tailwindcss/typography/blob/master/README.md).\r\n\r\n---\r\n\r\n## What to expect from here on out\r\n\r\nWhat follows from here is just a bunch of absolute nonsense I've written to dogfood the plugin itself. It includes every sensible typographic element I could think of, like **bold text**, unordered lists, ordered lists, code blocks, block quotes, _and even italics_.\r\n\r\nIt's important to cover all of these use cases for a few reasons:\r\n\r\n1. We want everything to look good out of the box.\r\n2. Really just the first reason, that's the whole point of the plugin.\r\n3. Here's a third pretend reason though a list with three items looks more realistic than a list with two items.\r\n\r\nNow we're going to try out another header style.\r\n\r\n### Typography should be easy\r\n\r\nSo that's a header for you — with any luck if we've done our job correctly that will look pretty reasonable.\r\n\r\nSomething a wise person once told me about typography is:\r\n\r\n> Typography is pretty important if you don't want your stuff to look like trash. Make it good then it won't be bad.\r\n> It's probably important that images look okay here by default as well:\r\n\r\n<figure>\r\n  <img\r\n    src=\"https://images.unsplash.com/photo-1556740758-90de374c12ad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\"\r\n    alt=\"\"\r\n  />\r\n  <figcaption>\r\n    Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of\r\n    classical Latin literature from 45 BC, making it over 2000 years old.\r\n  </figcaption>\r\n</figure>\r\n\r\nNow I'm going to show you an example of an unordered list to make sure that looks good, too:\r\n\r\n- So here is the first item in this list.\r\n- In this example we're keeping the items short.\r\n- Later, we'll use longer, more complex list items.\r\n\r\nAnd that's the end of this section.\r\n\r\n## What if we stack headings?\r\n\r\n### We should make sure that looks good, too.\r\n\r\nSometimes you have headings directly underneath each other. In those cases you often have to undo the top margin on the second heading because it usually looks better for the headings to be closer together than a paragraph followed by a heading should be.\r\n\r\n### When a heading comes after a paragraph …\r\n\r\nWhen a heading comes after a paragraph, we need a bit more space, like I already mentioned above. Now let's see what a more complex list would look like.\r\n\r\n- **I often do this thing where list items have headings.**\r\n\r\n  For some reason I think this looks cool which is unfortunate because it's pretty annoying to get the styles right.\r\n\r\n  I often have two or three paragraphs in these list items, too, so the hard part is getting the spacing between the paragraphs, list item heading, and separate list items to all make sense. Pretty tough honestly, you could make a strong argument that you just shouldn't write this way.\r\n\r\n- **Since this is a list, I need at least two items.**\r\n\r\n  I explained what I'm doing already in the previous list item, but a list wouldn't be a list if it only had one item, and we really want this to look realistic. That's why I've added this second list item so I actually have something to look at when writing the styles.\r\n\r\n- **It's not a bad idea to add a third item either.**\r\n\r\n  I think it probably would've been fine to just use two items but three is definitely not worse, and since I seem to be having no trouble making up arbitrary things to type, I might as well include it.\r\n\r\nAfter this sort of list I usually have a closing statement or paragraph, because it kinda looks weird jumping right to a heading.\r\n\r\n## Code should look okay by default.\r\n\r\nI think most people are going to use [highlight.js](https://highlightjs.org/) or [Prism](https://prismjs.com/) or something if they want to style their code blocks but it wouldn't hurt to make them look _okay_ out of the box, even with no syntax highlighting.\r\n\r\nHere's what a default `tailwind.config.js` file looks like at the time of writing:\r\n\r\n```js\r\nmodule.exports = {\r\n  purge: [],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  variants: {},\r\n  plugins: [],\r\n};\r\n```\r\n\r\nHopefully that looks good enough to you.\r\n\r\n### What about nested lists?\r\n\r\nNested lists basically always look bad which is why editors like Medium don't even let you do it, but I guess since some of you goofballs are going to do it we have to carry the burden of at least making it work.\r\n\r\n1. **Nested lists are rarely a good idea.**\r\n   - You might feel like you are being really \"organized\" or something but you are just creating a gross shape on the screen that is hard to read.\r\n   - Nested navigation in UIs is a bad idea too, keep things as flat as possible.\r\n   - Nesting tons of folders in your source code is also not helpful.\r\n2. **Since we need to have more items, here's another one.**\r\n   - I'm not sure if we'll bother styling more than two levels deep.\r\n   - Two is already too much, three is guaranteed to be a bad idea.\r\n   - If you nest four levels deep you belong in prison.\r\n3. **Two items isn't really a list, three is good though.**\r\n   - Again please don't nest lists if you want people to actually read your content.\r\n   - Nobody wants to look at this.\r\n   - I'm upset that we even have to bother styling this.\r\n\r\nThe most annoying thing about lists in Markdown is that `<li>` elements aren't given a child `<p>` tag unless there are multiple paragraphs in the list item. That means I have to worry about styling that annoying situation too.\r\n\r\n- **For example, here's another nested list.**\r\n\r\n  But this time with a second paragraph.\r\n\r\n  - These list items won't have `<p>` tags\r\n  - Because they are only one line each\r\n\r\n- **But in this second top-level list item, they will.**\r\n\r\n  This is especially annoying because of the spacing on this paragraph.\r\n\r\n  - As you can see here, because I've added a second line, this list item now has a `<p>` tag.\r\n\r\n    This is the second line I'm talking about by the way.\r\n\r\n  - Finally here's another list item so it's more like a list.\r\n\r\n- A closing list item, but with no nested list, because why not?\r\n\r\nAnd finally a sentence to close off this section.\r\n\r\n## There are other elements we need to style\r\n\r\nI almost forgot to mention links, like [this link to the Tailwind CSS website](https://tailwindcss.com). We almost made them blue but that's so yesterday, so we went with dark gray, feels edgier.\r\n\r\nWe even included table styles, check it out:\r\n\r\n| Wrestler                | Origin       | Finisher           |\r\n| ----------------------- | ------------ | ------------------ |\r\n| Bret \"The Hitman\" Hart  | Calgary, AB  | Sharpshooter       |\r\n| Stone Cold Steve Austin | Austin, TX   | Stone Cold Stunner |\r\n| Randy Savage            | Sarasota, FL | Elbow Drop         |\r\n| Vader                   | Boulder, CO  | Vader Bomb         |\r\n| Razor Ramon             | Chuluota, FL | Razor's Edge       |\r\n\r\nWe also need to make sure inline code looks good, like if I wanted to talk about `<span>` elements or tell you the good news about `@tailwindcss/typography`.\r\n\r\n### Sometimes I even use `code` in headings\r\n\r\nEven though it's probably a bad idea, and historically I've had a hard time making it look good. This _\"wrap the code blocks in backticks\"_ trick works pretty well though really.\r\n\r\nAnother thing I've done in the past is put a `code` tag inside of a link, like if I wanted to tell you about the [`tailwindcss/docs`](https://github.com/tailwindcss/docs) repository. I don't love that there is an underline below the backticks but it is absolutely not worth the madness it would require to avoid it.\r\n\r\n#### We haven't used an `h4` yet\r\n\r\nBut now we have. Please don't use `h5` or `h6` in your content, Medium only supports two heading levels for a reason, you animals. I honestly considered using a `before` pseudo-element to scream at you if you use an `h5` or `h6`.\r\n\r\nWe don't style them at all out of the box because `h4` elements are already so small that they are the same size as the body copy. What are we supposed to do with an `h5`, make it _smaller_ than the body copy? No thanks.\r\n\r\n### We still need to think about stacked headings though.\r\n\r\n#### Let's make sure we don't screw that up with `h4` elements, either.\r\n\r\nPhew, with any luck we have styled the headings above this text and they look pretty good.\r\n\r\nLet's add a closing paragraph here so things end with a decently sized block of text. I can't explain why I want things to end that way but I have to assume it's because I think things will look weird or unbalanced if there is a heading too close to the end of the document.\r\n\r\nWhat I've written here is probably long enough, but adding this final sentence can't hurt.","src/data/blog/examples/tailwind-typography.md","79aacd66af5a7044",{html:653,metadata:654},"<blockquote>\n<p>This article is from <a href=\"https://tailwindcss-typography.vercel.app/\">TailwindLabs</a>. I put this article to demonstrate how you can write blog posts/articles using AstroPaper theme.</p>\n</blockquote>\n<p>By default, Tailwind removes all of the default browser styling from paragraphs, headings, lists and more. This ends up being really useful for building application UIs because you spend less time undoing user-agent styles, but when you <em>really are</em> just trying to style some content that came from a rich-text editor in a CMS or a markdown file, it can be surprising and unintuitive.</p>\n<p>We get lots of complaints about it actually, with people regularly asking us things like:</p>\n<blockquote>\n<p>Why is Tailwind removing the default styles on my <code>h1</code> elements? How do I disable this? What do you mean I lose all the other base styles too?\r\nWe hear you, but we’re not convinced that simply disabling our base styles is what you really want. You don’t want to have to remove annoying margins every time you use a <code>p</code> element in a piece of your dashboard UI. And I doubt you really want your blog posts to use the user-agent styles either — you want them to look <em>awesome</em>, not awful.</p>\n</blockquote>\n<p>The <code>@tailwindcss/typography</code> plugin is our attempt to give you what you <em>actually</em> want, without any of the downsides of doing something stupid like disabling our base styles.</p>\n<p>It adds a new <code>prose</code> class that you can slap on any block of vanilla HTML content and turn it into a beautiful, well-formatted document:</p>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"html\"><code><span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">&#x3C;</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">article</span><span style=\"color:#6F42C1;--shiki-light-font-style:inherit;--shiki-dark:#C5E478;--shiki-dark-font-style:italic\"> class</span><span style=\"color:#D32F2F;--shiki-dark:#7FDBCA\">=</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span><span style=\"color:#22863A;--shiki-dark:#ECC48D\">prose</span><span style=\"color:#22863A;--shiki-dark:#D9F5DD\">\"</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">  &#x3C;</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">h1</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">Garlic bread with cheese: What the science tells us</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">&#x3C;/</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">h1</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">  &#x3C;</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">p</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    For years parents have espoused the health benefits of eating garlic bread</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    with cheese to their children, with the food earning such an iconic status</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    in our culture that kids will often dress up as warm, cheesy loaf for</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    Halloween.</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">  &#x3C;/</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">p</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">  &#x3C;</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">p</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    But a recent study shows that the celebrated appetizer may be linked to a</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    series of rabies cases springing up around the country.</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">  &#x3C;/</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">p</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span>\n<span class=\"line\"><span style=\"color:#C2C3C5;--shiki-light-font-style:inherit;--shiki-dark:#637777;--shiki-dark-font-style:italic\">  &#x3C;!-- ... --></span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">&#x3C;/</span><span style=\"color:#22863A;--shiki-dark:#CAECE6\">article</span><span style=\"color:#24292EFF;--shiki-dark:#7FDBCA\">></span></span></code></pre>\n<p>For more information about how to use the plugin and the features it includes, <a href=\"https://github.com/tailwindcss/typography/blob/master/README.md\">read the documentation</a>.</p>\n<hr>\n<h2 id=\"what-to-expect-from-here-on-out\">What to expect from here on out</h2>\n<p>What follows from here is just a bunch of absolute nonsense I’ve written to dogfood the plugin itself. It includes every sensible typographic element I could think of, like <strong>bold text</strong>, unordered lists, ordered lists, code blocks, block quotes, <em>and even italics</em>.</p>\n<p>It’s important to cover all of these use cases for a few reasons:</p>\n<ol>\n<li>We want everything to look good out of the box.</li>\n<li>Really just the first reason, that’s the whole point of the plugin.</li>\n<li>Here’s a third pretend reason though a list with three items looks more realistic than a list with two items.</li>\n</ol>\n<p>Now we’re going to try out another header style.</p>\n<h3 id=\"typography-should-be-easy\">Typography should be easy</h3>\n<p>So that’s a header for you — with any luck if we’ve done our job correctly that will look pretty reasonable.</p>\n<p>Something a wise person once told me about typography is:</p>\n<blockquote>\n<p>Typography is pretty important if you don’t want your stuff to look like trash. Make it good then it won’t be bad.\r\nIt’s probably important that images look okay here by default as well:</p>\n</blockquote>\n<figure>\n  <img src=\"https://images.unsplash.com/photo-1556740758-90de374c12ad?ixlib=rb-1.2.1&#x26;ixid=eyJhcHBfaWQiOjEyMDd9&#x26;auto=format&#x26;fit=crop&#x26;w=1000&#x26;q=80\" alt=\"\">\n  <figcaption>\n    Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of\n    classical Latin literature from 45 BC, making it over 2000 years old.\n  </figcaption>\n</figure>\n<p>Now I’m going to show you an example of an unordered list to make sure that looks good, too:</p>\n<ul>\n<li>So here is the first item in this list.</li>\n<li>In this example we’re keeping the items short.</li>\n<li>Later, we’ll use longer, more complex list items.</li>\n</ul>\n<p>And that’s the end of this section.</p>\n<h2 id=\"what-if-we-stack-headings\">What if we stack headings?</h2>\n<h3 id=\"we-should-make-sure-that-looks-good-too\">We should make sure that looks good, too.</h3>\n<p>Sometimes you have headings directly underneath each other. In those cases you often have to undo the top margin on the second heading because it usually looks better for the headings to be closer together than a paragraph followed by a heading should be.</p>\n<h3 id=\"when-a-heading-comes-after-a-paragraph\">When a heading comes after a paragraph …</h3>\n<p>When a heading comes after a paragraph, we need a bit more space, like I already mentioned above. Now let’s see what a more complex list would look like.</p>\n<ul>\n<li>\n<p><strong>I often do this thing where list items have headings.</strong></p>\n<p>For some reason I think this looks cool which is unfortunate because it’s pretty annoying to get the styles right.</p>\n<p>I often have two or three paragraphs in these list items, too, so the hard part is getting the spacing between the paragraphs, list item heading, and separate list items to all make sense. Pretty tough honestly, you could make a strong argument that you just shouldn’t write this way.</p>\n</li>\n<li>\n<p><strong>Since this is a list, I need at least two items.</strong></p>\n<p>I explained what I’m doing already in the previous list item, but a list wouldn’t be a list if it only had one item, and we really want this to look realistic. That’s why I’ve added this second list item so I actually have something to look at when writing the styles.</p>\n</li>\n<li>\n<p><strong>It’s not a bad idea to add a third item either.</strong></p>\n<p>I think it probably would’ve been fine to just use two items but three is definitely not worse, and since I seem to be having no trouble making up arbitrary things to type, I might as well include it.</p>\n</li>\n</ul>\n<p>After this sort of list I usually have a closing statement or paragraph, because it kinda looks weird jumping right to a heading.</p>\n<h2 id=\"code-should-look-okay-by-default\">Code should look okay by default.</h2>\n<p>I think most people are going to use <a href=\"https://highlightjs.org/\">highlight.js</a> or <a href=\"https://prismjs.com/\">Prism</a> or something if they want to style their code blocks but it wouldn’t hurt to make them look <em>okay</em> out of the box, even with no syntax highlighting.</p>\n<p>Here’s what a default <code>tailwind.config.js</code> file looks like at the time of writing:</p>\n<pre class=\"astro-code astro-code-themes min-light night-owl\" style=\"background-color:#ffffff;--shiki-dark-bg:#011627;color:#24292eff;--shiki-dark:#d6deeb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#1976D2;--shiki-dark:#C5E478\">module</span><span style=\"color:#24292EFF;--shiki-light-font-style:inherit;--shiki-dark:#C792EA;--shiki-dark-font-style:italic\">.</span><span style=\"color:#1976D2;--shiki-dark:#C5E478\">exports</span><span style=\"color:#D32F2F;--shiki-dark:#C792EA\"> =</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  purge</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> []</span><span style=\"color:#212121;--shiki-dark:#D6DEEB\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  theme</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">    extend</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> {}</span><span style=\"color:#212121;--shiki-dark:#D6DEEB\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  }</span><span style=\"color:#212121;--shiki-dark:#D6DEEB\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  variants</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> {}</span><span style=\"color:#212121;--shiki-dark:#D6DEEB\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">  plugins</span><span style=\"color:#D32F2F;--shiki-dark:#D6DEEB\">:</span><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\"> []</span><span style=\"color:#212121;--shiki-dark:#D6DEEB\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292EFF;--shiki-dark:#D6DEEB\">};</span></span></code></pre>\n<p>Hopefully that looks good enough to you.</p>\n<h3 id=\"what-about-nested-lists\">What about nested lists?</h3>\n<p>Nested lists basically always look bad which is why editors like Medium don’t even let you do it, but I guess since some of you goofballs are going to do it we have to carry the burden of at least making it work.</p>\n<ol>\n<li><strong>Nested lists are rarely a good idea.</strong>\n<ul>\n<li>You might feel like you are being really “organized” or something but you are just creating a gross shape on the screen that is hard to read.</li>\n<li>Nested navigation in UIs is a bad idea too, keep things as flat as possible.</li>\n<li>Nesting tons of folders in your source code is also not helpful.</li>\n</ul>\n</li>\n<li><strong>Since we need to have more items, here’s another one.</strong>\n<ul>\n<li>I’m not sure if we’ll bother styling more than two levels deep.</li>\n<li>Two is already too much, three is guaranteed to be a bad idea.</li>\n<li>If you nest four levels deep you belong in prison.</li>\n</ul>\n</li>\n<li><strong>Two items isn’t really a list, three is good though.</strong>\n<ul>\n<li>Again please don’t nest lists if you want people to actually read your content.</li>\n<li>Nobody wants to look at this.</li>\n<li>I’m upset that we even have to bother styling this.</li>\n</ul>\n</li>\n</ol>\n<p>The most annoying thing about lists in Markdown is that <code>&#x3C;li></code> elements aren’t given a child <code>&#x3C;p></code> tag unless there are multiple paragraphs in the list item. That means I have to worry about styling that annoying situation too.</p>\n<ul>\n<li>\n<p><strong>For example, here’s another nested list.</strong></p>\n<p>But this time with a second paragraph.</p>\n<ul>\n<li>These list items won’t have <code>&#x3C;p></code> tags</li>\n<li>Because they are only one line each</li>\n</ul>\n</li>\n<li>\n<p><strong>But in this second top-level list item, they will.</strong></p>\n<p>This is especially annoying because of the spacing on this paragraph.</p>\n<ul>\n<li>\n<p>As you can see here, because I’ve added a second line, this list item now has a <code>&#x3C;p></code> tag.</p>\n<p>This is the second line I’m talking about by the way.</p>\n</li>\n<li>\n<p>Finally here’s another list item so it’s more like a list.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>A closing list item, but with no nested list, because why not?</p>\n</li>\n</ul>\n<p>And finally a sentence to close off this section.</p>\n<h2 id=\"there-are-other-elements-we-need-to-style\">There are other elements we need to style</h2>\n<p>I almost forgot to mention links, like <a href=\"https://tailwindcss.com\">this link to the Tailwind CSS website</a>. We almost made them blue but that’s so yesterday, so we went with dark gray, feels edgier.</p>\n<p>We even included table styles, check it out:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Wrestler</th><th>Origin</th><th>Finisher</th></tr></thead><tbody><tr><td>Bret “The Hitman” Hart</td><td>Calgary, AB</td><td>Sharpshooter</td></tr><tr><td>Stone Cold Steve Austin</td><td>Austin, TX</td><td>Stone Cold Stunner</td></tr><tr><td>Randy Savage</td><td>Sarasota, FL</td><td>Elbow Drop</td></tr><tr><td>Vader</td><td>Boulder, CO</td><td>Vader Bomb</td></tr><tr><td>Razor Ramon</td><td>Chuluota, FL</td><td>Razor’s Edge</td></tr></tbody></table>\n<p>We also need to make sure inline code looks good, like if I wanted to talk about <code>&#x3C;span></code> elements or tell you the good news about <code>@tailwindcss/typography</code>.</p>\n<h3 id=\"sometimes-i-even-use-code-in-headings\">Sometimes I even use <code>code</code> in headings</h3>\n<p>Even though it’s probably a bad idea, and historically I’ve had a hard time making it look good. This <em>“wrap the code blocks in backticks”</em> trick works pretty well though really.</p>\n<p>Another thing I’ve done in the past is put a <code>code</code> tag inside of a link, like if I wanted to tell you about the <a href=\"https://github.com/tailwindcss/docs\"><code>tailwindcss/docs</code></a> repository. I don’t love that there is an underline below the backticks but it is absolutely not worth the madness it would require to avoid it.</p>\n<h4 id=\"we-havent-used-an-h4-yet\">We haven’t used an <code>h4</code> yet</h4>\n<p>But now we have. Please don’t use <code>h5</code> or <code>h6</code> in your content, Medium only supports two heading levels for a reason, you animals. I honestly considered using a <code>before</code> pseudo-element to scream at you if you use an <code>h5</code> or <code>h6</code>.</p>\n<p>We don’t style them at all out of the box because <code>h4</code> elements are already so small that they are the same size as the body copy. What are we supposed to do with an <code>h5</code>, make it <em>smaller</em> than the body copy? No thanks.</p>\n<h3 id=\"we-still-need-to-think-about-stacked-headings-though\">We still need to think about stacked headings though.</h3>\n<h4 id=\"lets-make-sure-we-dont-screw-that-up-with-h4-elements-either\">Let’s make sure we don’t screw that up with <code>h4</code> elements, either.</h4>\n<p>Phew, with any luck we have styled the headings above this text and they look pretty good.</p>\n<p>Let’s add a closing paragraph here so things end with a decently sized block of text. I can’t explain why I want things to end that way but I have to assume it’s because I think things will look weird or unbalanced if there is a heading too close to the end of the document.</p>\n<p>What I’ve written here is probably long enough, but adding this final sentence can’t hurt.</p>",{headings:655,localImagePaths:692,remoteImagePaths:693,frontmatter:694,imagePaths:697},[656,659,662,665,668,671,674,677,680,683,686,689],{depth:32,slug:657,text:658},"what-to-expect-from-here-on-out","What to expect from here on out",{depth:36,slug:660,text:661},"typography-should-be-easy","Typography should be easy",{depth:32,slug:663,text:664},"what-if-we-stack-headings","What if we stack headings?",{depth:36,slug:666,text:667},"we-should-make-sure-that-looks-good-too","We should make sure that looks good, too.",{depth:36,slug:669,text:670},"when-a-heading-comes-after-a-paragraph","When a heading comes after a paragraph …",{depth:32,slug:672,text:673},"code-should-look-okay-by-default","Code should look okay by default.",{depth:36,slug:675,text:676},"what-about-nested-lists","What about nested lists?",{depth:32,slug:678,text:679},"there-are-other-elements-we-need-to-style","There are other elements we need to style",{depth:36,slug:681,text:682},"sometimes-i-even-use-code-in-headings","Sometimes I even use code in headings",{depth:311,slug:684,text:685},"we-havent-used-an-h4-yet","We haven’t used an h4 yet",{depth:36,slug:687,text:688},"we-still-need-to-think-about-stacked-headings-though","We still need to think about stacked headings though.",{depth:311,slug:690,text:691},"lets-make-sure-we-dont-screw-that-up-with-h4-elements-either","Let’s make sure we don’t screw that up with h4 elements, either.",[],[],{title:646,author:73,pubDatetime:695,featured:76,draft:77,tags:696,description:648},["Date","2022-07-05T02:05:51.000Z"],[79,80],[]];

export { _astro_dataLayerContent as default };
